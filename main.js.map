{"version":3,"sources":["./src/app/admin-group/admin-group.component.ts","./src/app/admin-group/admin-group.component.html","./src/app/create-group/create-group.component.ts","./src/app/create-group/create-group.component.html","./src/app/utils/tiles.utils.ts","./src/app/mail/mail.component.ts","./src/app/mail/mail.component.html","./src/environments/environment.ts","./src/app/services/location/location.service.ts","./src/app/services/dialog/dialog.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/utils/geolocation.utils.ts","./src/app/app.module.ts","./src/app/map/map.component.ts","./src/app/map/map.component.html","./src/app/services/websocket/websocket.service.ts","./src/app/material/material.module.ts","./src/app/mail-statistics/mail-statistics.component.ts","./src/app/mail-statistics/mail-statistics.component.html","./src/app/taxi/taxi.component.ts","./src/app/taxi/taxi.component.html","./src/app/taxi-statistics/taxi-statistics.component.ts","./src/app/taxi-statistics/taxi-statistics.component.html","./src/app/app-routing.module.ts","./src/app/services/groups/groups.service.ts","./src/app/services/reports/reports.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { GroupsService } from '../services/groups/groups.service';\nimport {FormControl} from '@angular/forms';\nimport { MatListOption } from '@angular/material/list'\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-admin-group',\n  templateUrl: './admin-group.component.html',\n  styleUrls: ['./admin-group.component.scss']\n})\nexport class AdminGroupComponent implements OnInit {\n  \n  addingUser = false\n\n  public users;\n\n  public collaborator;\n  public listaGestores;\n  gestoresEliminar = []\n  disableSelect = new FormControl(true);\n\n  constructor(\n    private groupsService: GroupsService,\n    private toastr: ToastrService,\n    @Inject(MAT_DIALOG_DATA) public hashtag: String) { \n    this.collaborator = {\n      name: '',\n      key: '',\n\t    customAttributes: {\n\t\t    driverName: '',\n\t\t    vehiclePlate: '',\n\t\t    vehicleBrand: '',\n\t\t    vehicleModel: ''\n\t    }\n    },\n    this.users = {\n      id: '',\n      group: '',\n      name: '',\n      key: '',\n      creation: ''\n    }\n    this.cargarListaGestores()\n    \n  }\n\n  ngOnInit(): void {\n  }\n\n  // Metodo para solicitar al servicio de grupos para añadir un gestor a un grupo.\n  addUser(){\n    \n    this.addingUser = false\n    this.groupsService.createCollaborator(this.collaborator, this.hashtag).subscribe(\n      data => {\n        //this.users.push({name: data.valueOf()['name'], accessCode: data.valueOf()['key']})\n        this.toastr.success(\"Se ha agregado el usuario\")\n        this.cargarListaGestores()\n      },\n      error => {\n        console.log(error);\n        this.toastr.error(\"Ha ocurrido un error al agregar el gestor\")\n        \n      }\n    );\n  }\n\n  // Metodo para limpiar la lista actual de gestores y cargar los existentes.\n  cargarListaGestores() {\n    this.users = []\n    this.groupsService.getCollaboratorByHashtag(this.hashtag).subscribe(result => {\n      this.users = result;\n    })\n  }\n\n  // Metodo encargado de obtener los gestores a eliminar para ser enviados al servicio \n  // de grupos para eliminar estos.\n  onGroupsChange(options: MatListOption[]) {\n    // map these MatListOptions to their values\n    this.gestoresEliminar = options.map(o => o.value)\n    if (this.gestoresEliminar.length > 0) {\n      this.disableSelect.setValue(false);\n    }\n    else {\n      this.disableSelect.setValue(true);\n    }\n    console.log(this.gestoresEliminar)\n  }\n\n  // Metodo para enviar los gestores a eliminar al servicio de grupos\n  eliminarGestor(){\n    this.gestoresEliminar.map(gestor => {\n      this.groupsService.deleteCollaborator(this.hashtag, gestor.id).subscribe(\n        result => {\n          console.log(result)\n          this.toastr.success(`Se ha eliminado el gestor ${gestor.name}`)\n          this.cargarListaGestores()\n          this.disableSelect.setValue(true);\n        },\n        error => {\n          console.log(error);\n          this.toastr.error(`Error al eliminar el gestor ${gestor.name}`)\n        }\n      );\n    })\n  }\n\n}\n","<div *ngIf=\"addingUser\"\n        style=\"position: absolute; background-color: rgba(0, 0, 0, 0.25); top: 0; left: 0; z-index: 100; width: 100%; height: 100%; display: flex;\"\n        (click)=\"addingUser = false\">\n        <mat-card (click)=\"$event.stopPropagation()\" style=\"min-width: unset; width: calc(92% - 32px); margin: auto\">\n\n            <h2>Añadir gestor</h2>\n\n\n\n\n            <div style=\"display: flex;\">\n\n                <mat-form-field appearance=\"standard\" style=\"width: 45%; margin: 0 auto; margin-left: 2.5%;\">\n                    <mat-label>Nombre</mat-label>\n                    <input [(ngModel)]=\"collaborator.name\" [ngModelOptions]=\"{standalone: true}\" matInput placeholder=\"\" />\n                </mat-form-field>\n\n                <mat-form-field appearance=\"standard\" style=\"width: 45%; margin: 0 auto; margin-left: 2.5%;\">\n                    <mat-label>Contraseña de gestor</mat-label>\n                    <input [(ngModel)]=\"collaborator.key\" [ngModelOptions]=\"{standalone: true}\" matInput placeholder=\"\" />\n                    <mat-icon matPrefix style=\"display: flex !important;\">\n                        lock\n                    </mat-icon>\n                </mat-form-field>\n\n            </div>\n\n            <div style=\"display: flex;\">\n                <mat-form-field appearance=\"standard\" style=\"width: 45%; margin: 0 auto; margin-left: 2.5%;\">\n                    <mat-label>Nombre del conductor</mat-label>\n                    <input [(ngModel)]=\"collaborator.customAttributes.driverName\" [ngModelOptions]=\"{standalone: true}\" matInput placeholder=\"\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"standard\" style=\"width: 45%; margin: 0 auto; margin-left: 2.5%;\">\n                    <mat-label>Placa del vehículo</mat-label>\n                    <input [(ngModel)]=\"collaborator.customAttributes.vehiclePlate\" [ngModelOptions]=\"{standalone: true}\" matInput placeholder=\"\" />\n                </mat-form-field>\n                \n\n            </div>\n\n            <div style=\"display: flex;\">\n                <mat-form-field appearance=\"standard\" style=\"width: 45%; margin: 0 auto; margin-left: 2.5%;\">\n                    <mat-label>Marca del vehículo</mat-label>\n                    <input [(ngModel)]=\"collaborator.customAttributes.vehicleBrand\" [ngModelOptions]=\"{standalone: true}\" matInput placeholder=\"\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"standard\" style=\"width: 45%; margin: 0 auto; margin-left: 2.5%;\">\n                    <mat-label>Modelo del vehículo</mat-label>\n                    <input [(ngModel)]=\"collaborator.customAttributes.vehicleModel\" [ngModelOptions]=\"{standalone: true}\" matInput placeholder=\"\" />\n                </mat-form-field>\n            </div>\n\n            <div style=\"display: flex; justify-content: space-around;\">\n                <button mat-stroked-button style=\"margin: 10px 10px; width: 30%; min-width: min-content; \"\n                    (click)=\"addingUser = false\">Cancelar </button>\n                <button mat-stroked-button style=\"margin: 10px 10px; width: 30%; min-width: min-content; \"\n                    [disabled]=\"false\" (click)=\"addUser()\" color=\"accent\">Añadir gestor </button>\n            </div>\n\n        </mat-card>\n\n    </div>\n\n<h3>Administrar usuarios de #{{hashtag}}</h3>\n\n<div id=\"global\">\n    <div id=nombres>\n        <mat-selection-list #listaGestores (selectionChange)=\"onGroupsChange(listaGestores.selectedOptions.selected)\">\n            <mat-list-option *ngFor=\"let gestor of users\" [value]=\"gestor\">\n              Name: {{gestor.name}} | Key: {{gestor.key}}\n            </mat-list-option>\n        </mat-selection-list>     \n    </div>        \n</div>        \n<button mat-stroked-button style=\"min-width: min-content; margin: auto 0; height: min-content;\" (click)=\"addingUser = !addingUser\" color=\"primary\">Añadir gestor</button>\n<button (click)=\"eliminarGestor()\" mat-raised-button [disabled]=\"disableSelect.value\" color=\"accent\">Eliminar Gestor</button>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ToastrService } from 'ngx-toastr';\nimport { GroupsService } from '../services/groups/groups.service';\n\n@Component({\n  selector: 'app-create-group',\n  templateUrl: './create-group.component.html',\n  styleUrls: ['./create-group.component.scss']\n})\nexport class CreateGroupComponent implements OnInit {\n\n  public group;\n\n\n  constructor(\n    private dialogRef: MatDialogRef<CreateGroupComponent>, \n    private groupsService: GroupsService,\n    private toastr: ToastrService,\n    @Inject(MAT_DIALOG_DATA) public category: Number) { \n    this.group = {\n      hashtag: '',\n      name: '',\n      description: '',\n      adminKey: '',\n      category: this.category\n    }\n  }\n\n  ngOnInit(): void {\n  }\n  \n  onNoClick(){\n    this.dialogRef.close()\n  }\n\n  // Solicitar al servicio de los grupos para crear un grupo.\n  onYesClick(){\n    console.log(this.group)\n    this.groupsService.createGroup(this.group).subscribe(\n      data => {\n        console.log(data)\n        this.dialogRef.close(data)\n        this.toastr.success(`Se ha creado el grupo ${this.group.hashtag}`)\n      },\n      error => {\n        console.log(error);\n        this.toastr.error(`Ha ocurrido un error al crear el grupo ${this.group.hashtag}`)\n      }\n    );\n  }\n\n}\n","<div style=\"display: flex; flex-direction: column;\">\n    <h2>Crear nuevo grupo</h2>\n\n    <form>\n\n        <div style=\"display: flex;\">\n            \n            <mat-form-field appearance=\"standard\" style=\"width: 45%; margin: 0 auto;  max-width: 300px;\">\n                <mat-label>Nombre del grupo</mat-label>\n                <input [(ngModel)]=\"group.name\" [ngModelOptions]=\"{standalone: true}\" matInput placeholder=\"\" />\n            </mat-form-field>\n\n            <mat-form-field appearance=\"standard\" style=\"width: 45%; margin: 0 auto; max-width: 300px;\">\n                <mat-label>Descripción del grupo</mat-label>\n                <input [(ngModel)]=\"group.description\" [ngModelOptions]=\"{standalone: true}\" matInput placeholder=\"\" />\n            </mat-form-field>\n        </div>\n        \n        <div style=\"display: flex;\">\n            <mat-form-field appearance=\"standard\" style=\"width: 45%; margin: 0 auto; max-width: 300px;\">\n                <mat-label>Hash del grupo</mat-label>\n                <input [(ngModel)]=\"group.hashtag\" [ngModelOptions]=\"{standalone: true}\" matInput placeholder=\"Ex. 1234\" />\n                <mat-icon matPrefix style=\"display: flex !important;\">\n                    <div style=\"margin: auto;\">#</div>\n                </mat-icon>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"standard\" style=\"width: 45%; margin: 0 auto; max-width: 300px;\">\n                <mat-label>Contraseña de administración</mat-label>\n                <input [(ngModel)]=\"group.adminKey\" [ngModelOptions]=\"{standalone: true}\" matInput placeholder=\"Ex. 1234\" />\n                <mat-icon matPrefix style=\"display: flex !important;\">\n                    lock\n                </mat-icon>\n            </mat-form-field>\n        </div>\n\n\n        <div style=\"display: flex; justify-content: space-around;\">\n            <button mat-stroked-button style=\"margin: 10px 10px; width: 30%; min-width: min-content; \"\n                (click)=\"onNoClick()\">Cancelar </button>\n            <button mat-stroked-button style=\"margin: 10px 10px; width: 30%; min-width: min-content; \"\n                (click)=\"onYesClick()\" [disabled]=\"false\" color=\"accent\">Crear grupo </button>\n        </div>\n\n    </form>\n</div>","\nexport default class TilesUtils {\n\n    static lon2tile(lon, zoom) {\n        return (Math.floor((lon + 180) / 360 * Math.pow(2, zoom)));\n    }\n    static lat2tile(lat, zoom) {\n        return (Math.floor((1 - Math.log(Math.tan(lat * Math.PI / 180) + 1 / Math.cos(lat * Math.PI / 180)) / Math.PI) / 2 * Math.pow(2, zoom)));\n    }   \n    static  tile2long(x,z) {\n        return (x/Math.pow(2,z)*360-180);\n    }\n    static tile2lat(y,z) {\n        var n=Math.PI-2*Math.PI*y/Math.pow(2,z);\n        return (180/Math.PI*Math.atan(0.5*(Math.exp(n)-Math.exp(-n))));\n    }\n\n    static totalTiles(xmin, xmax, ymin, ymax, zoom) {\n        const top_tile = TilesUtils.lat2tile(ymax, zoom); \n        const left_tile = TilesUtils.lon2tile(xmin, zoom);\n        const bottom_tile = TilesUtils.lat2tile(ymin, zoom);\n        const right_tile = TilesUtils.lon2tile(xmax, zoom);\n        const width = Math.abs(left_tile - right_tile) + 1;\n        const height = Math.abs(top_tile - bottom_tile) + 1;\n\n        return {width, height}; \n    }\n\n    static project(lat, lng, size) {\n        let siny = Math.sin((lat * Math.PI) / 180);\n        siny = Math.min(Math.max(siny, -0.9999), 0.9999);\n        return {\n            lng: size * (0.5 + lng / 360),\n            lat: size * (0.5 - Math.log((1 + siny) / (1 - siny)) / (4 * Math.PI))\n        }\n    }\n\n    static unproject(lat, lng, size) {\n\n        let v = 1/ (4*Math.PI)\n\n        let b = 1/size\n\n        let siny = (Math.pow(Math.E, -(b * lat - 0.5)/v) - 1) / (Math.pow(Math.E, -((-0.5 + b * lat)/v)) + 1)\n        let latR = (180 * Math.asin(siny)) / Math.PI\n        let lngR = 360 * ((lng/256) - 0.5)\n\n        return {lng: lngR, lat: latR}\n    }\n}","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { WebSocketSubject } from 'rxjs/webSocket';\nimport { DialogService } from '../services/dialog/dialog.service';\nimport { WebsocketService } from '../services/websocket/websocket.service';\n\nimport { GroupsService } from '../services/groups/groups.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subject } from 'rxjs';\nimport GeolocationUtils from '../utils/geolocation.utils';\nimport { LocationService } from '../services/location/location.service';\n\n@Component({\n  selector: 'app-mail',\n  templateUrl: './mail.component.html',\n  styleUrls: ['./mail.component.scss']\n})\nexport class MailComponent implements OnInit, OnDestroy {\n\n  // Variable que ayuda a que sea responsive, si está activa muestra la ventana de grupos\n  mobileShowGroups = false\n\n  // Rol seleccionado (0 Observador, 1 Admin, 2 Gestor)\n  selectedRol = 0\n\n  // Grupo que se está añadiendo para verlo (input)\n  groupHash = \"\"\n\n  // Código o contraseña del grupo que se está añadiendo (input)\n  groupCode = \"\"\n\n  // Si está o no abierta la ventana de ver un nuevo grupo\n  addingNew = false\n\n  // Si es true muestra el progress spinner\n  loading = false\n\n  // Conexiones a sockets por cada uno de los grupos que se están gestionando\n  collabSockets: { messagesSubject: Subject<any>, socket: WebSocketSubject<any>, hashtag: string }[] = []\n\n  // Variable que guarda el número de interval que envía la info al gestor cada 1s\n  interval = undefined\n\n  // Guarda la provincia, cantón y distrito donde se ubica el usuario\n  whereAmI = undefined\n\n  constructor(\n    private dialogService: DialogService,\n    private webSocketService: WebsocketService,\n    public groupsService: GroupsService,\n    private toastr: ToastrService,\n    private locationService: LocationService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.refreshWhereAmI()\n  }\n\n  ngOnDestroy(): void {\n    //Cierra todas las conexiones de los ws\n    this.collabSockets.forEach(\n      (e: { messagesSubject: Subject<any>, socket: WebSocketSubject<any>, hashtag: string }) => e.socket.complete()\n    )\n  }\n\n  //Cambia el rol seleccionado\n  changeSelectedRol(value) {\n    this.selectedRol = value\n  }\n\n  //Obtiene si el botón de ver grupo debería estar deshabilitado\n  get disabledSeeGroup() {\n    return this.groupHash == \"\"\n  }\n\n  // Añade un grupo a los grupos visibles\n  addGroup() {\n    this.loading = true\n    //this.groups.push({hash, role: this.selectedRol, visible: true})\n    console.log(this.groupHash)\n\n    if (this.selectedRol == 0) {\n      this.groupsService.getGroupByHashtag(this.groupHash).subscribe(\n        data => {\n          this.toastr.success(`El grupo #${this.groupHash} se puede ver en este momento`)\n          this.groupsService.groups.push({ hashtag: data['hashtag'], role: this.selectedRol, visible: true })\n          this.loading = false;\n        },\n        error => {\n          console.log(error);\n          if (error.status == 404) {\n            this.toastr.error(`El grupo con hashtag #${this.groupHash} no existe`)\n          }\n          else {\n            this.toastr.error(`Ha ocurrido un error inesperado al cargar el grupo`)\n          }\n          this.loading = false;\n        }\n      );\n    }\n    else {\n      this.groupsService.getLoginUser(this.selectedRol, this.groupCode, this.groupHash).subscribe(\n        data => {\n          this.toastr.success(`El grupo #${this.groupHash} se puede ver en este momento`)\n          this.groupsService.groups.push({ name: data['name'], token: data['token'], hashtag: this.groupHash, role: this.selectedRol, visible: true })\n          if (this.selectedRol == 2) {\n            this.collabSockets.push({ ...this.webSocketService.connect(data['token']), hashtag: this.groupHash })\n            this.refreshInverval()\n          }\n          this.loading = false;\n        },\n        error => {\n          console.log(error);\n          if (error.status == 404) {\n            this.toastr.error(`El grupo con hashtag #${this.groupHash} no existe`)\n          }\n          else if (error.status == 401) {\n            this.toastr.error(`El código para ingresar al grupo #${this.groupHash} es inválido`)\n          }\n          else {\n            this.toastr.error(`Ha ocurrido un error inesperado al cargar el grupo`)\n          }\n          this.loading = false;\n        }\n      );\n    }\n    console.log(this.groupsService.groups)\n    this.addingNew = false\n  }\n\n  //Abre un dialog para administrar el grupo\n  administrarGrupo(hashtag) {\n    let dialog = this.dialogService.adminGroupDialog(hashtag)\n  }\n\n  // Cambia la visibilidad del grupo en el mapa\n  toogleVisibility(group) {\n    group.visible = !group.visible\n  }\n\n  // Abre un dialog para crear un grupo\n  createGroup() {\n    let dialog = this.dialogService.createGroupDialog(1)\n  }\n\n  // Envía información sobre el gestor, para que se actualice su posición en el mapa\n  async sendCollaboratorInfo() {\n    let currentLocation: any = await GeolocationUtils.getCurrentLocation()\n    this.collabSockets.forEach((e: { messagesSubject: Subject<any>, socket: WebSocketSubject<any>, hashtag: string }) => {\n      e.socket.next({ action: 1, data: { lat: currentLocation.lat, lon: currentLocation.lng } })\n      e.socket.asObservable().subscribe(response => {\n        console.debug(response)\n      })\n    })\n  }\n\n  // Crea un nuevo interval si no existe o renueva el existente\n  refreshInverval() {\n    if (this.interval != undefined) {\n      clearInterval(this.interval)\n    }\n    this.interval = setInterval(this.sendCollaboratorInfo.bind(this), 1000)\n  }\n\n  // Hace que un grupo se elimine de la lista de grupos que estoy viendo, si tuviese conexiones de gestor, las cierra\n  closeGroup(group) {\n    this.groupsService.groups = this.groupsService.groups.filter(e => !(e == group))\n    this.collabSockets = this.collabSockets.filter((e: { messagesSubject: Subject<any>, socket: WebSocketSubject<any>, hashtag: string }) => {\n      if (e.hashtag == group.hashtag) {\n        e.socket.complete()\n        return false\n      }\n      return true\n    })\n  }\n\n  // Determina que el siguiente punto marcará una entrega\n  delivery(group) {\n    this.collabSockets.find(g => g.hashtag == group.hashtag).socket.next({\n      action: 2,\n      data: {\n        newDelivery: true\n      }\n    })\n  }\n\n  // Refresca la variable whereAmI, trayendo la info de la db\n  refreshWhereAmI() {\n    GeolocationUtils.getCurrentLocation().then(\n      (myLocation: any) => {\n        this.locationService.whereAmI(myLocation.lat, myLocation.lng).then((value) => {\n          console.log(value)\n          this.whereAmI = value;\n        })\n      }\n    )\n  }\n\n  verEstadisticas(){\n    let dialog = this.dialogService.mailStatisticsDialog();\n  }\n}\n","<mat-toolbar color=\"primary\">\n    Meeli | MAIL\n  </mat-toolbar>\n  <mat-progress-bar mode=\"indeterminate\" color=\"primary\" *ngIf=\"loading\"></mat-progress-bar>\n  <div style=\"height: 4px; width: 100%; background-color: #3f51b5;\" *ngIf=\"!loading\"></div>\n  <section class=\"app-container\">\n    <section class=\"container\">\n        <button mat-raised-button class=\"mobile-groups\" color=\"accent\"\n            (click)=\"mobileShowGroups = !mobileShowGroups\">{{mobileShowGroups? \"Atras\": \"Grupos\"}}</button>\n        <mat-card class=\"card\" [ngClass]=\"mobileShowGroups? 'visible': ''\">\n            <div *ngIf=\"addingNew\" (click)=\"addingNew = false\"\n                style=\"background-color: rgba(0, 0, 0, 0.251); width: 100%; height: 100%; position: absolute; z-index: 100; top: 0; left: 0; border-radius: 4px;\">\n\n                <mat-card (click)=\"$event.stopPropagation()\"\n                    style=\"min-width: unset; width: calc(92% - 32px); margin: 20px 4%\">\n\n                    <h2>Ver grupo nuevo</h2>\n\n                    <mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\"\n                        style=\"width: min-content; margin: 5px 10px\" value=\"0\" (change)=\"changeSelectedRol(group.value)\"\n                        #group=\"matButtonToggleGroup\">\n                        <mat-button-toggle value=\"0\">Observador</mat-button-toggle>\n                        <mat-button-toggle value=\"2\">Gestor</mat-button-toggle>\n                        <mat-button-toggle value=\"1\">Administrador</mat-button-toggle>\n                    </mat-button-toggle-group>\n\n\n                    <div style=\"display: flex;\">\n\n                        <mat-form-field appearance=\"standard\" style=\"width: 45%; margin: 0 auto; margin-left: 2.5%;\">\n                            <mat-label>Código de grupo</mat-label>\n                            <input [(ngModel)]=\"groupHash\" [ngModelOptions]=\"{standalone: true}\" matInput\n                                placeholder=\"Ex. 123\" [(ngModel)]=\"groupHash\" />\n                            <mat-icon matPrefix style=\"display: flex !important;\">\n                                <div style=\"margin: auto;\">#</div>\n                            </mat-icon>\n                        </mat-form-field>\n\n                        <mat-form-field appearance=\"standard\" style=\"width: 45%; margin: 0 auto;\"\n                            *ngIf=\"selectedRol == 1 || selectedRol == 2\">\n                            <mat-label>Código de ingreso al grupo</mat-label>\n                            <input matInput placeholder=\"Ex. abc\" [(ngModel)]=\"groupCode\" />\n                            <mat-icon matPrefix>lock</mat-icon>\n                        </mat-form-field>\n                    </div>\n\n                    <div style=\"display: flex;\">\n                        <button mat-stroked-button style=\"margin: 10px 10px; width: 30%; min-width: min-content; \"\n                            (click)=\"addingNew = false;\">Cancelar </button>\n                        <button mat-stroked-button style=\"margin: 10px 10px; width: 30%; min-width: min-content; \"\n                            [disabled]=\"disabledSeeGroup\" (click)=\"addGroup(); \">Añadir grupo</button>\n                    </div>\n\n                </mat-card>\n            </div>\n\n            <div style=\"display: flex; width: 100%;\">\n                <button mat-stroked-button style=\"margin: 10px auto; width: 45%; min-width: min-content; \"\n                    (click)=\"this.selectedRol = 0; addingNew = true\">Ver otro grupo </button>\n                <button mat-stroked-button style=\"margin: 10px auto; width: 45%; min-width: min-content; \"\n                    (click)=\"createGroup()\">Crear grupo</button>\n\n            </div>\n\n            <h3>Grupos</h3>\n\n            <div\n                style=\"width: calc(100% - 20px); min-height: 100px; border-radius: 10px; border: 1px rgb(216, 216, 216) solid; padding: 10px; overflow-y: auto;\">\n                <div *ngIf=\"groupsService.groups.length <= 0 && whereAmI != undefined\" style=\"min-height: 100px; display: flex; justify-content: center; align-items: center; text-align: center; flex-direction: column; line-height: 1.5;\">\n                    <div style=\"color: gray;\">No hay grupos por mostrar aún</div>\n                    <div style=\"color: rgb(74, 74, 74);\">Ubicado en \n                        <b style=\"color: #3f51b5\">{{whereAmI.district}}, {{whereAmI.canton}}, {{whereAmI.province}}</b>\n                    </div>\n                </div>\n                <div *ngFor=\"let group of this.groupsService.groups\" role=\"listitem\"\n                    style=\"display: flex; flex-direction: row; justify-content: center; align-items: center;\">\n                    <button mat-button\n                        style=\"min-width: 40px; max-width: 40px; padding: 0; min-height: 40px; max-height: 40px\"\n                        (click)=\"closeGroup(group)\">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                    <div\n                        style=\"display: flex; justify-content: space-between; width: calc(100% - 30px); margin: 5px; padding: 10px; border-radius: 8px; background-color: rgb(245, 245, 245);\">\n                        <div style=\"margin: auto 0; font-size: 15px; \">#{{group.hashtag}}</div>\n                        <div>\n                            <button mat-stroked-button *ngIf=\"group.role == 2\" (click)=\"delivery(group)\"\n                                matTooltip=\"Gestionar grupo\" style=\"margin-right: 7px;\" color=\"accent\">\n                                <mat-icon>add_location_alt</mat-icon>\n                            </button>\n                            <button mat-stroked-button *ngIf=\"group.role == 1\" (click)=\"administrarGrupo(group.hashtag)\"\n                                matTooltip=\"Administrar grupo\" style=\"margin-right: 7px;\" color=\"accent\">\n                                <mat-icon>assignment</mat-icon>\n                            </button>\n                            <button mat-stroked-button (click)=\"toogleVisibility(group)\" color=\"primary\"\n                                matTooltip=\"Ocultar/Mostrar\">\n                                <mat-icon>{{group.visible ? 'visibility' : 'visibility_off'}}</mat-icon>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </mat-card>\n\n    </section>\n    <app-map [groups]=\"groupsService.groups\" category=\"1\">\n\n    </app-map>\n</section>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\nexport const API_URL = \"https://meeli.sytes.net:8001\"\nexport const WS_URL = \"wss://meeli.sytes.net:8001\"\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { API_URL } from 'src/environments/environment';\n\n/* \n  Otiene la provincia, cantón y distrito donde se ubica cierta lat y lng\n*/\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationService {\n\n  module = \"meeli/where-am-i\"\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  whereAmI(lat, lng){\n    const params = {lat, lon: lng}\n    return this.http.get(`${API_URL}/${this.module}`, {params}).toPromise()\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AdminGroupComponent } from 'src/app/admin-group/admin-group.component';\nimport { CreateGroupComponent } from 'src/app/create-group/create-group.component';\nimport { MailStatisticsComponent } from 'src/app/mail-statistics/mail-statistics.component';\nimport { TaxiStatisticsComponent } from 'src/app/taxi-statistics/taxi-statistics.component';\n\n/* \n  Funciona para llamar a los dialogs de manera más fácil\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n\n  constructor(public dialog: MatDialog) { }\n\n  createGroupDialog(category: Number){\n    let config : MatDialogConfig = {}\n\n    config.maxHeight = \"90vh\"\n    config.minWidth = \"50vw\"\n    config.data = category\n\n    return this.dialog.open(CreateGroupComponent, config)\n  }\n\n  adminGroupDialog(hashtag){\n    let config : MatDialogConfig = {}\n\n    config.maxHeight = \"100vh\"\n    config.minWidth = \"50vw\"\n    config.data = hashtag\n\n    return this.dialog.open(AdminGroupComponent, config)\n  }\n\n  taxiStatisticsDialog(){\n    let config : MatDialogConfig = {}\n\n    config.maxHeight = \"80vh\"\n    config.minWidth = \"70vw\"\n\n    return this.dialog.open(TaxiStatisticsComponent, config)\n  }\n\n  mailStatisticsDialog(){\n    let config : MatDialogConfig = {}\n\n    config.maxHeight = \"80vh\"\n    config.minWidth = \"70vw\"\n\n    return this.dialog.open(MailStatisticsComponent, config)\n  }\n}\n","import { Component } from '@angular/core';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { WebsocketService } from './services/websocket/websocket.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'meeli';\n\n  constructor(\n    \n  ){\n    \n  }\n}\n","<router-outlet>\n\n</router-outlet>","export default class GeolocationUtils {\n    static getCurrentLocation(){\n        return new Promise((resolve, reject) => {\n\n            let setCurrentPosition = (p) => {\n                resolve({lng: p.coords.longitude, lat: p.coords.latitude})\n            }\n            setCurrentPosition.bind(this)\n            \n            let errorGettingPosition = (e) => {\n                reject(\"Se necesitan permisos de ubicación para utilizar la aplicación\")\n            }\n            errorGettingPosition.bind(this)\n            \n            window.navigator.geolocation.getCurrentPosition(setCurrentPosition, errorGettingPosition)\n        })\n    }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { MapComponent } from './map/map.component';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CreateGroupComponent } from './create-group/create-group.component';\nimport { DialogService } from './services/dialog/dialog.service';\nimport { MailComponent } from './mail/mail.component';\nimport { TaxiComponent } from './taxi/taxi.component';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AdminGroupComponent } from './admin-group/admin-group.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport { TaxiStatisticsComponent } from './taxi-statistics/taxi-statistics.component';\nimport { MailStatisticsComponent } from './mail-statistics/mail-statistics.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MapComponent,\n    CreateGroupComponent,\n    MailComponent,\n    TaxiComponent,\n    AdminGroupComponent,\n    TaxiStatisticsComponent,\n    MailStatisticsComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    RouterModule,\n    MaterialModule,\n    FormsModule,\n    HttpClientModule,\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right'\n    })\n  ],\n  entryComponents: [\n    CreateGroupComponent\n  ],\n  providers: [DialogService, DatePipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgxMatDatetimePicker } from '@angular-material-components/datetime-picker';\nimport { DatePipe } from '@angular/common';\nimport { ArrayType } from '@angular/compiler';\nimport { AfterViewChecked, AfterViewInit, Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { range, Subject } from 'rxjs';\nimport { WebSocketSubject } from 'rxjs/webSocket';\nimport { GroupsService } from '../services/groups/groups.service';\nimport { ReportsService } from '../services/reports/reports.service';\nimport { WebsocketService } from '../services/websocket/websocket.service';\nimport TilesUtils from '../utils/tiles.utils';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\n  constructor(\n    private toastr: ToastrService,\n    private webSocketService: WebsocketService,\n    private reportsService: ReportsService\n  ) {\n  }\n\n\n  ngOnDestroy(): void {\n\n    //Termina la conexión del ws\n    if (this.webSocket != undefined) {\n      this.webSocket.socket.complete()\n    }\n  }\n\n  // Grupos que se están mostrando\n  @Input() groups: any[];\n\n  // Categoría para saber qué se muestra en el mapa (1 mail, 2 taxi)\n  @Input() category: Number;\n\n\n  ngAfterViewInit(): void {\n    this.refreshTile()\n    this.setOnCurrentPosition()\n    this.svg.element = document.getElementById(\"map\")\n\n\n    // Para que el mapa siempre quede cuadrado, se determina el minimo entre las dimensiones y se colocan las en ese mínimo\n    let max = Math.min(this.svg.element.parentElement.clientHeight, this.svg.element.parentElement.clientWidth)\n\n    this.svg.element.parentElement.style.maxHeight = `${max}px`\n    this.svg.element.parentElement.style.maxWidth = `${max}px`\n\n  }\n\n  ngOnInit(): void {\n    this.setIntervals()\n  }\n\n  //Obtiene la fecha actual\n  get date() {\n    return new Date();\n  }\n\n  //URL de capa que se muestra en el mapa\n  TILE = \"https://cartodb-basemaps-a.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png\"\n\n  //Zoom del mapa, va de 1-18. Es el estándar para poder mostrar bien las capas\n  zoom: number = 13\n\n  //Bandera para saber si el mapa está clickeado o no, se usa para el movimiento\n  clicked = false\n\n  // X & Y en las que se encuentra la esquina superior izquierda del viewBox del svg del mapa\n  currentXY = {\n    x: 0,\n    y: 0,\n  }\n\n  // Tamaño del tile\n  TILE_SIZE = 256\n\n  // Tamaño que debería tener el viewbox del svg, calculado con el TILE_SIZE y el zoom actual\n  get size() {\n    return (this.TILE_SIZE / Math.pow(2, this.zoom))\n  }\n\n  // Tamaño de los marcadores en el mapa\n  get markerSize() {\n    return this.size * 0.1\n  }\n\n  // Última X & Y en las que estuvo el mouse, cuando va siendo arrastrando. También se usa para el movimiento\n  lastXY = {\n    x: 0, y: 0\n  }\n\n  // Bordes del mapa\n  bounds = {\n    min: { x: 0.0000000001, y: 0.0000000001 },\n    max: { x: 255.999999999, y: 255.9999999999 }\n  }\n\n  // Determina el actual estilo del cursor \n  cursor = \"grab\"\n\n  // Lista que contiene cada una de las url de las imágenes, por cada zoom, con su debida posición en el mapa. \n  // Se usa para mostrar el TILE en el mapa\n  tileImages: { lat: number, lng: number, z: number, x: number, y: number }[][] = Array(18).fill([]).map(x => x = [])\n\n  //Tiene el tamaño del svg del mapa y el NodeElement de html del mismo\n  svg = {\n    width: 0,\n    height: 0,\n    element: undefined\n  }\n\n  // Posición actual del usuario, las x&y representan la posición proyectada\n  currentPosition: { lng, lat, x, y } = undefined\n\n  // Tamaño que deberían tener las imágenes del TILE para mostrarlas en el svg\n  get imageWidth() {\n    return this.TILE_SIZE / Math.pow(2, this.zoom + 1)\n  }\n\n  // Sirve para saber qué información se muestra en el tooltip y si se debería mostrar en ese momento\n  tooltip = {\n    showing: false,\n    taxi: undefined,\n    mail: undefined,\n    my_ubication: undefined,\n    taxi_ride: undefined,\n    delivery: undefined\n  }\n\n  // Si está cargando alguna capa, se coloca en true y muestra un spinner\n  loading = false;\n\n  // Tiene la conexión de ws que traerá los datos en tiempo real que se muestran en el mapa\n  webSocket: { messagesSubject: Subject<any>, socket: WebSocketSubject<any> };\n\n  // Bounding box actual para los elementos que se encuentren en el mapa\n  boundingBox: any[][]\n\n  // Detemrina si se está o no mostrando el panel inferior que tiene el filtro por fecha\n  showingFilter = false\n\n  // Determina el número de interval del interval que actualiza la información cada 1s\n  interval = undefined\n\n  // Determina si en ese momento se está aplicando un filtro, se usa para mostrar el botón de quitar filtro\n  applyingFilter = false\n\n\n  // Determina cada una de las imágenes del TILE que necesita ser cargada y las inserta en la lista con sus respectivos valores de x & y\n  refreshTile() {\n    let zoom = this.zoom + 1\n\n    let xmin = this.currentXY.x\n    xmin = Math.min(Math.max(this.bounds.min.x, xmin), this.bounds.max.x)\n    let ymin = this.currentXY.y\n    ymin = Math.min(Math.max(this.bounds.min.y, ymin), this.bounds.max.y)\n    let xmax = this.currentXY.x + this.size\n    xmax = Math.min(Math.max(this.bounds.min.x, xmax), this.bounds.max.x)\n    let ymax = this.currentXY.y + this.size\n    ymax = Math.min(Math.max(this.bounds.min.y, ymax), this.bounds.max.y)\n\n    let unprojectedMIN = TilesUtils.unproject(ymin, xmin, this.TILE_SIZE)\n    let unprojectedMAX = TilesUtils.unproject(ymax, xmax, this.TILE_SIZE)\n\n\n    let { width, height } = TilesUtils.totalTiles(unprojectedMIN.lng, unprojectedMAX.lng, unprojectedMIN.lat, unprojectedMAX.lat, zoom)\n\n    let x = TilesUtils.lon2tile(unprojectedMIN.lng, zoom)\n    let y = TilesUtils.lat2tile(unprojectedMIN.lat, zoom)\n\n    for (let i = x; i < width + x; i++) {\n      for (let j = y; j < height + y; j++) {\n        if (!this.tileImages[this.zoom].find((e) => e.x == i && e.y == j && e.z == zoom)) {\n          let { lat, lng } = TilesUtils.project(TilesUtils.tile2lat(j, zoom), TilesUtils.tile2long(i, zoom), this.TILE_SIZE)\n          this.tileImages[this.zoom].push({ lat, lng, z: zoom, x: i, y: j })\n        }\n      }\n    }\n  }\n\n  //Obtiene la url para obtener una images del tile con los parámetros dados\n  tileUrl(x, y, z) {\n    let params = { x, y, z }\n    return this.TILE.replace(/[{].[}]/g, (s) => params[s.charAt(1)])\n  }\n\n\n  // Hace zoomin al mapa\n  zoomin = (refreshTile = true) => {\n    this.setZoom(this.zoom + 1, refreshTile)\n  }\n\n\n  // Hace zoomout al mapa\n  zoomout = (refreshTile = true) => {\n    this.setZoom(this.zoom - 1, refreshTile)\n  }\n\n  // Setea el zoom del mapa, validando que no se pase del max/min, puede o no refrescar el tile\n  setZoom = (z, refreshTile = true) => {\n    if (z < 0) {\n      z = 0\n    }\n    else if (z > 17) {\n      z = 17\n    }\n    const { x, y } = this.getCenter()\n    this.zoom = z\n    this.setCenter(x, y, refreshTile)\n    this.verifyBounds()\n  }\n\n  // Obtiene las coordenadas en base 256 del centro del mapa\n  getCenter = () => {\n    return {\n      x: this.currentXY.x + this.size / 2,\n      y: this.currentXY.y + this.size / 2\n    }\n  }\n\n  // Evento para el scroll, para hacer zoomin o zoomout\n  wheel(event) {\n    if (event.deltaY > 0) {\n      this.zoomout()\n    }\n    else {\n      this.zoomin()\n    }\n  }\n\n  // Obtiene la viewBox del svg\n  get viewBox() {\n    return `${this.currentXY.x} ${this.currentXY.y} ${this.size} ${this.size}`\n  }\n\n  // Cuando el mouse es apretado, se guarda el click, se coloca el cursor como agarrando\n  mouseDown(e: MouseEvent) {\n    this.clicked = true\n    this.lastXY = { x: e.x, y: e.y }\n    this.cursor = \"grabbing\"\n  }\n\n  // Cuando el mouse deja de ser apretado, se refresca la capa\n  mouseUp() {\n    this.clicked = false\n    this.cursor = \"grab\"\n    this.refreshTile()\n  }\n\n  // Cuando el mouse se mueve, mueve el mapa, según su última x y y\n  mouseMove(e: MouseEvent) {\n    if (this.clicked) {\n      this.moveXY(e.x, e.y)\n      this.lastXY = { x: e.x, y: e.y }\n    }\n  }\n\n  // Mueve el mapa a cierto x o y, se utiliza para el evento de mouseMove dentro del mapa\n  moveXY(x, y) {\n    this.currentXY.x = this.currentXY.x + (this.lastXY.x - x) * this.size * 0.0015\n    this.currentXY.y = this.currentXY.y + (this.lastXY.y - y) * this.size * 0.0015\n    this.verifyBounds()\n  }\n\n  // Evento que hace que cuando da doble click se haga zoomin\n  dbClick(e) {\n    this.zoomin()\n  }\n\n  // Verifica que el viewBox no se salga de las coordenadas\n  verifyBounds() {\n    if (this.currentXY.x < 0) {\n      this.currentXY.x = 0\n    }\n    if (this.currentXY.x + this.size > this.TILE_SIZE) {\n      this.currentXY.x = this.TILE_SIZE - this.size\n    }\n    if (this.currentXY.y < 0) {\n      this.currentXY.y = 0\n    }\n    if (this.currentXY.y + this.size > this.TILE_SIZE) {\n      this.currentXY.y = this.TILE_SIZE - this.size\n    }\n  }\n\n  // Coloca el centro en x y y dadas, en base 256\n  setCenter(x, y, refreshTile = true) {\n    this.currentXY.x = x - (this.size / 2)\n    this.currentXY.y = y - (this.size / 2)\n    if (refreshTile)\n      this.refreshTile()\n  }\n\n  // Coloca el centro en lat y lng dada\n  setCenterLatLng(lat, lng) {\n    let projected = TilesUtils.project(lat, lng, this.TILE_SIZE)\n    this.setCenter(projected.lng, projected.lat)\n  }\n\n  // Coloca el mapa en la posición actual del usuario\n  setOnCurrentPosition() {\n    let setOnCurrentPosition = (p) => {\n      //this.setLocationLatLng(p.coords.latitude, p.coords.longitude)\n      let projected = TilesUtils.project(p.coords.latitude, p.coords.longitude, this.TILE_SIZE)\n      this.currentPosition = { lng: p.coords.longitude, lat: p.coords.latitude, x: projected.lng, y: projected.lat }\n      this.setCenter(projected.lng, projected.lat)\n    }\n    setOnCurrentPosition.bind(this)\n\n    let errorGettingPosition = (e) => {\n      console.log(e)\n      this.setZoom(2)\n    }\n    errorGettingPosition.bind(this)\n\n    window.navigator.geolocation.getCurrentPosition(setOnCurrentPosition, errorGettingPosition)\n  }\n\n  // Actualiza la posición actual del usuario\n  getCurrentPosition() {\n    let setCurrentPosition = (p) => {\n      let projected = TilesUtils.project(p.coords.latitude, p.coords.longitude, this.TILE_SIZE)\n      this.currentPosition = { lng: p.coords.longitude, lat: p.coords.latitude, x: projected.lng, y: projected.lat }\n    }\n    setCurrentPosition.bind(this)\n\n    let errorGettingPosition = (e) => {\n      console.log(e)\n      this.toastr.error(\"Se necesitan permisos de ubicación para utilizar la aplicación\")\n    }\n    errorGettingPosition.bind(this)\n\n    window.navigator.geolocation.getCurrentPosition(setCurrentPosition, errorGettingPosition)\n  }\n\n  // Setea el intérvalo para que cada 1 segundo actualice la posición actual\n  setIntervals() {\n    setInterval(this.getCurrentPosition.bind(this), 1000)\n    this.setupMapInfoWS()\n  }\n\n  // Limpia lo que había en el tooltip y luego lo muestra\n  showTooltip() {\n    this.clearTooltip()\n    this.tooltip.showing = true;\n  }\n\n  // Hace que el bounding_box sea visible al menor zoom posible\n  focus() {\n    if (this.boundingBox == undefined)\n      return\n\n    this.loading = true;\n\n    let lat1 = this.boundingBox[0][1], lng1 = this.boundingBox[0][0]\n    let lat2 = this.boundingBox[1][1], lng2 = this.boundingBox[1][0]\n\n    const center = TilesUtils.project((lat1 + lat2) / 2, (lng1 + lng2) / 2, this.TILE_SIZE)\n    this.setCenter(center.lng, center.lat)\n    this.setZoom(17, false)\n\n\n    let bounds = [\n      { x: lng1, y: lat1 },\n      { x: lng2, y: lat2 },\n    ]\n    setTimeout(this.focusAux.bind(this, bounds), 0);\n  }\n\n  //Función auxiliar para focus que hace zoomout hasta el sea visible el boundingBox\n  focusAux(bounds) {\n    if (!this.fitBounds(bounds)) {\n      this.zoomout(false);\n      setTimeout(this.focusAux.bind(this, bounds), 0)\n    }\n    else {\n      this.refreshTile()\n      this.loading = false\n    }\n  }\n\n  // Determina si un punto dado, proyectado o no, se encuentra dentro del viewBox\n  pointOnMap(latitude, longitude, projecting = true) {\n\n    let projected = { lat: latitude, lng: longitude }\n    if (projecting)\n      projected = TilesUtils.project(latitude, longitude, this.TILE_SIZE)\n\n    const bounds = this.mapBounds\n\n    return projected.lat >= bounds[0].y && projected.lat <= bounds[1].y && projected.lng >= bounds[0].x && projected.lng <= bounds[1].x\n  }\n\n  // Retorna un boolean que determina si el mapa contiene a los puntos dados\n  fitBounds(bounds: { x, y }[]) {\n    let fit = true;\n\n    bounds.forEach((e) => {\n      fit = fit && this.pointOnMap(e.y, e.x)\n    })\n\n    return fit;\n  }\n\n  // Obtiene los bordes del viewBox\n  get mapBounds() {\n    return [\n      { x: this.currentXY.x, y: this.currentXY.y },\n      { x: this.currentXY.x + this.size, y: this.currentXY.y + this.size }\n    ]\n  }\n\n  // Setea el socket para obtener la información de todos los grupos y mostrarla\n  setupMapInfoWS() {\n    let focused = false;\n    this.webSocket = this.webSocketService.connect(\"guest\")\n    this.webSocket.socket.asObservable().subscribe(data => {\n      const { records, bounding_box } = data.rows[0].get_realtime_info\n      if (records != null) {\n        if (this.category == 2)\n          this.showTaxis(records)\n        else\n          this.showMails(records)\n\n      }\n      if (bounding_box != null){\n        if (bounding_box.type == 'Polygon')\n          this.boundingBox = [bounding_box.coordinates[0][0], bounding_box.coordinates[0][2]]\n        else\n          this.boundingBox = [bounding_box.coordinates, bounding_box.coordinates]\n      }\n      if(!focused){\n        focused = true;\n        this.focus()   \n      }\n    })\n    let visibleGroups = this.groups.filter((group, i) => group.visible && this.groups.indexOf(group) == i)\n    if (visibleGroups.length > 0)\n      this.webSocket.socket.next(\n        {\n          action: Number(4),\n          data: {\n            category: Number(this.category),\n            groups: visibleGroups.map(group => group.hashtag)\n          }\n        })\n    else {\n      this.mails = []\n      this.taxis = []\n    }\n\n    this.interval = setInterval(this.refreshMapInfo.bind(this), 1000)\n\n  }\n\n  // Función que va a ser llamda por el interval que envía un mensaje al ws para obtener nuevamente la información y mostrarla\n  refreshMapInfo() {\n    let visibleGroups = this.groups.filter((group, i) => group.visible && this.groups.indexOf(group) == i)\n    if (visibleGroups.length > 0)\n      this.webSocket.socket.next(\n        {\n          action: Number(4),\n          data: {\n            category: Number(this.category),\n            groups: visibleGroups.map(group => group.hashtag)\n          }\n        }\n      )\n    else {\n      this.mails = []\n      this.taxis = []\n    }\n  }\n  // Funciona para filtar la información por fechas y mostrar las entregas o los viajes, según lo indique la categoría\n  async search(picker1: NgxMatDatetimePicker<any>, picker2: NgxMatDatetimePicker<any>) {\n    if(this.groups.length == 0){\n      this.loading = false\n      return\n    }\n    this.loading = true\n    this.mailReports = []\n    this.taxiRides = []\n    let start = undefined;\n    let end = undefined;\n    if (picker1._selected != null)\n      start = new Date(picker1._selected).toISOString()\n    if (picker2._selected != null)\n      start = new Date(picker1._selected).toISOString()\n    this.showingFilter = false;\n    this.applyingFilter = true;\n    this.stopInterval();\n    \n    this.groups.forEach(group => {\n      this.reportsService.getReports(this.category == 2 ? 'taxi' : 'mail', group.hashtag, undefined, start, end).then(\n        response => {\n          let bounding_box\n\n          if (this.category == 2) {\n            bounding_box = response.rows[0].get_rides.bounding_box\n            this.showTaxiRides(response.rows[0].get_rides.records)\n          }\n          else {\n            bounding_box = response.rows[0].get_deliveries.bounding_box\n            this.showMailReports(response.rows[0].get_deliveries.records)\n          }\n          if (bounding_box != null) {\n            if (bounding_box.type == 'Polygon')\n              this.boundingBox = [bounding_box.coordinates[0][0], bounding_box.coordinates[0][2]]\n            else\n              this.boundingBox = [bounding_box.coordinates, bounding_box.coordinates]\n            this.focus()\n          }\n          else{\n            this.toastr.info(\"No hay ningún elemento para mostrar\")\n          }\n          this.loading = false;\n        }\n      )\n    }\n    )\n  }\n\n  // Detiene el interval que muestra las\n  stopInterval() {\n    clearInterval(this.interval)\n    this.taxis = []\n    this.mails = []\n  }\n\n  // Limpia el filtro de búsqueda y deja de mostrar lo buscado, vuelve a mostrar la información en realtime\n  clearSearch() {\n    this.applyingFilter = false;\n    this.mailReports = []\n    this.taxiRides = []\n    this.interval = setInterval(this.refreshMapInfo.bind(this), 1000)\n  }\n\n  /* TAXIS */\n\n  // Lista de taxis en realtime\n  taxis = [\n\n  ]\n\n  // Lista de viajes de taxis a mostrar\n  taxiRides = [\n\n  ]\n\n  // Recibe una lista de taxis y prepara su información para ser mostrada\n  showTaxis(records: any[]) {\n    records = records.filter(taxi => taxi.geom != null)\n    records.forEach(taxiRecord => {\n      const projected = TilesUtils.project(taxiRecord.geom.coordinates[1], taxiRecord.geom.coordinates[0], this.TILE_SIZE)\n      taxiRecord.x = projected.lng\n      taxiRecord.y = projected.lat\n\n      taxiRecord.last_seen = new Date(taxiRecord.last_seen + \"+00:00\")\n    })\n    this.taxis = records\n  }\n\n  // Recibe una lista de viajes de taxis, prepara la información para lograr mostrarla en el mapa\n  showTaxiRides(records: any[]) {\n    records.forEach((value) => {\n      value.projectedTrack = value.track.coordinates.map(point => {\n        let projected = TilesUtils.project(point[1], point[0], this.TILE_SIZE)\n        return [projected.lng, projected.lat]\n      });\n\n      value.svgTrack = value.projectedTrack.map(point => point.join(\" \")).join(\" L \")\n      value.svgTrack = `M ${value.svgTrack}`\n      console.log(value.svgTrack)\n\n      value.start = new Date(value.start + \"+00:00\")\n      value.end = new Date(value.end + \"+00:00\")\n    })\n    this.taxiRides = [...this.taxiRides, ...records]\n    /*\n      end: \"2020-10-29T03:52:55.680806\", start: \"2020-10-29T03:52:24.741044\",…}\n      collaborator: \"6ef38bb0-8388-4fdc-9f46-cd6cd22273c5\"\n      driver_name: \"x\"\n      end: \"2020-10-29T03:52:55.680806\"\n      hashtag: \"pruebataxi\"\n      metters: 3.318016390719465\n      ride_count: 1\n      start: \"2020-10-29T03:52:24.741044\"\n      track: {type: \"LineString\", coordinates: [[-84.29428, 10.35964], [-84.29428, 10.35967]]}\n      vehicle_brand: \"x\"\n      vehicle_model: \"x\"\n      vehicle_plate: \"x\"\n    */\n  }\n\n  // Muestra el tooltip y le setea la información del taxi\n  showTaxiTooltip(taxi) {\n    /*\n      collaborator: \"6ef38bb0-8388-4fdc-9f46-cd6cd22273c5\"\n      driver_name: \"x\"\n      geom: {type: \"Point\", coordinates: Array(2)}\n      group: \"beaa4cd0-e2c4-4b84-93e4-da481014bec2\"\n      hashtag: \"pruebataxi\"\n      is_available: true\n      last_seen: \"2020-10-28T16:16:35.100587\"\n      ride_count: 0\n      session: \"efd8a635-4368-417e-8498-0ebb0095ed4a\"\n      vehicle_brand: \"x\"\n      vehicle_model: \"x\"\n      vehicle_plate: \"x\"\n      x: 68.07103146666668\n      y: 120.5172813918194\n    */\n    this.showTooltip()\n    this.tooltip.taxi = taxi\n  }\n\n  // Busca mostrar todos los viejes de un colaborador\n  showCollaboratorRides(taxi) {\n    this.reportsService.getReports(this.category == 2 ? 'taxi' : 'mail', undefined, taxi.collaborator, undefined, undefined).then(\n      response => {\n        let bounding_box = response.rows[0].get_rides.bounding_box\n        this.showTaxiRides(response.rows[0].get_rides.records)\n\n        this.showingFilter = false;\n        this.applyingFilter = true;\n        this.stopInterval()\n        if (bounding_box != null){\n          if (bounding_box.type == 'Polygon')\n          this.boundingBox = [bounding_box.coordinates[0][0], bounding_box.coordinates[0][2]]\n          else\n          this.boundingBox = [bounding_box.coordinates, bounding_box.coordinates]\n          this.focus()\n          this.clearTooltip()\n        }\n        else{\n          this.toastr.info(\"No hay ningún elemento para mostrar\")\n        }\n      }\n    )\n  }\n\n  // Muestra el tooltip y luego le setea la información del viaje\n  showRideTooltip(taxi_ride){\n    this.showTooltip()\n    this.tooltip.taxi_ride = taxi_ride;\n  }\n\n\n\n  /* MAIL */\n\n  // Lista de colaboradores en realtime\n  mails = [\n\n  ]\n\n  // Lista de entregas a mostrar en el mapa\n  mailReports = [\n\n  ]\n\n  // Recibe una lista de colaboradores en realtime y prepara la ifnromación para mostrarla en el mapa\n  showMails(records) {\n    records = records.filter(mail => mail.geom != null)\n    records.forEach(mailRecord => {\n      const projected = TilesUtils.project(mailRecord.geom.coordinates[1], mailRecord.geom.coordinates[0], this.TILE_SIZE)\n      mailRecord.x = projected.lng\n      mailRecord.y = projected.lat\n\n      mailRecord.last_seen = new Date(mailRecord.last_seen + \"+00:00\")\n    })\n    this.mails = records\n  }\n\n  // Recibe una lista de entrega y prepara la información para luego mostrarla en el mapa\n  showMailReports(records) {\n    /*\n        collaborator: \"2a50ddce-7eed-439b-bac5-74c425d87286\"\n        delivery_count: 1\n        driver_name: \"Walter\"\n        first: \"KOIN23\"\n        geom:\n        coordinates: (2) [-84.430677, 10.3271511]\n        type: \"Point\"\n        __proto__: Object\n        hashtag: \"correosW\"\n        last_seen: \"2020-10-29T04:59:36.03125\"\n        vehicle_brand: \"KKKL\"\n        vehicle_plate: \"KKK\"\n    */\n    records.forEach(record => {\n      let projected = TilesUtils.project(record.geom.coordinates[1], record.geom.coordinates[0], this.TILE_SIZE)\n      record.projectedPoint = [projected.lng, projected.lat]\n\n      record.last_seen = new Date(record.last_seen + \"+00:00\")\n    });\n    this.mailReports.push(...records)\n  }\n\n  // Muestra el tooltip y le setea la información el colaborador\n  showMailTooltip(mail) {\n    this.showTooltip()\n    this.tooltip.mail = mail;\n  }\n\n  // Busca la ifnromación de las entregas de un colaborador y la muestra\n  showCollaboratorDeliveries(mail) {\n    this.reportsService.getReports(this.category == 2 ? 'taxi' : 'mail', undefined, mail.collaborator, undefined, undefined).then(\n      response => {\n        let bounding_box = response.rows[0].get_deliveries.bounding_box\n        this.showMailReports(response.rows[0].get_deliveries.records)\n\n        this.showingFilter = true;\n        this.applyingFilter = true;\n        this.stopInterval()\n        if (bounding_box != null){\n\n          if (bounding_box.type == 'Polygon')\n          this.boundingBox = [bounding_box.coordinates[0][0], bounding_box.coordinates[0][2]]\n          else\n          this.boundingBox = [bounding_box.coordinates, bounding_box.coordinates]\n          this.clearTooltip()\n          this.focus()\n        }\n        else{\n          this.toastr.info(\"No hay ningún elemento para mostrar\")\n        }\n      }\n    )\n  }\n\n  // Muestra el tooltip y le setea la información de la entrega\n  showDeliveryTooltip(delivary){\n    this.showTooltip();\n    this.tooltip.delivery = delivary;\n  }\n\n\n  // Oculta y limpia la información del tooltip\n  clearTooltip() {\n    this.tooltip = {\n      showing: false,\n      taxi: undefined,\n      mail: undefined,\n      my_ubication: undefined,\n      taxi_ride: undefined,\n      delivery: undefined\n    }\n  }\n\n}\n","<div class=\"map-container\">\n\n  <div style=\"display: flex; flex-direction: column; width: 85%; height: 90%; position: relative; overflow: hidden;\"\n    (click)=\"showingFilter = false\">\n    <div *ngIf=\"loading\"\n      style=\"position: absolute; top: 0; left: 0; background-color: rgba(0, 0, 0, 0.163); height: 100%; width: 100%; display: flex; justify-content: center; align-items: center;\">\n      <mat-spinner></mat-spinner>\n    </div>\n\n\n    <svg [attr.viewBox]=\"viewBox\" preserveAspectRatio=\"xMinYMin\" id=\"map\" [attr.width]=\"TILE_SIZE\"\n      [attr.height]=\"TILE_SIZE\" (attr.width)=\"svg.width\" (attr.height)=\"svg.height\"\n      style=\"background-color: rgb(226, 226, 226); height: 100%; width: 100%; margin: auto;\" [style.cursor]=\"cursor\"\n      (mousedown)=\"mouseDown($event)\" (mousemove)=\"mouseMove($event)\" (mouseup)=\"mouseUp()\" (mouseleave)=\"mouseUp()\"\n      (wheel)=\"wheel($event)\">\n\n      <svg [attr.width]=\"TILE_SIZE\" [attr.height]=\"TILE_SIZE\" x=\"0\" y=\"0\" (dblclick)=\"dbClick($event)\">\n        <image preserveAspectRatio=\"none\" *ngFor=\"let img of tileImages[zoom]\"\n          [attr.href]=\"tileUrl(img.x, img.y, img.z)\" [attr.x]=\"img.lng\" [attr.y]=\"img.lat\" [attr.width]=\"imageWidth\">\n        </image>\n      </svg>\n\n      <svg [attr.width]=\"TILE_SIZE\" [attr.height]=\"TILE_SIZE\" x=\"0\" y=\"0\">\n        <!-- MAIL COLLABS -->\n        <svg *ngFor=\"let mail of mails\" viewBox=\"0 0 64 64\" [attr.x]=\"mail.x - ((markerSize*0.8) / 2)\"\n          [attr.y]=\"mail.y - ((markerSize*0.8) / 2)\" (click)=\"showMailTooltip(mail)\" [attr.width]=\"markerSize * 0.8\"\n          [attr.height]=\"markerSize * 0.8\">\n          <path data-name=\"layer4\" d=\"M59.2 31h-3.9l-4.4-8H39v8h20.2z\" fill=\"#c3d6e0\"></path>\n          <path data-name=\"layer2\" d=\"M61 32.4c0-1.1-.9-1.3-1.7-1.4H39v12h5.5a6 6 0 0 1 8.9 0H61z\" fill=\"#415582\">\n          </path>\n          <path data-name=\"layer3\" d=\"M39 15H3v28h5.5a6 6 0 0 1 8.9 0H39V15z\" fill=\"#f27e7c\"></path>\n          <circle data-name=\"layer2\" cx=\"13\" cy=\"47\" r=\"6\" fill=\"#415582\"></circle>\n          <circle data-name=\"layer2\" cx=\"49\" cy=\"47\" r=\"6\" fill=\"#415582\"></circle>\n          <path data-name=\"layer1\" d=\"M44.5 43h-27a6 6 0 0 1 1.2 6h24.6a6 6 0 0 1 1.2-6zm9 0a6 6 0 0 1 1.2 6H61v-6z\"\n            fill=\"#6479a0\"></path>\n          <path data-name=\"opacity\" fill=\"#fff\" opacity=\".5\" d=\"M51.8 24.6l-.9-1.6h-3.3l-8 8h5.7l6.5-6.4z\"></path>\n          <path data-name=\"opacity\"\n            d=\"M8 15H3v28h5.5a6 6 0 0 1 8.9 0H39v-4H8zm10.6 34h24.7a5.7 5.7 0 0 1-.3-3H18.9a5.7 5.7 0 0 1-.3 3zm36 0H61v-3h-6.1a5.7 5.7 0 0 1-.3 3z\"\n            fill=\"#000064\" opacity=\".15\"></path>\n          <circle data-name=\"opacity\" cx=\"13\" cy=\"47\" r=\"3\" fill=\"#000064\" opacity=\".2\"></circle>\n          <circle data-name=\"opacity\" cx=\"49\" cy=\"47\" r=\"3\" fill=\"#000064\" opacity=\".2\"></circle>\n          <path data-name=\"stroke\" fill=\"none\" stroke=\"#2e4369\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n            stroke-width=\"1\"\n            d=\"M43.3 49H18.7M61 49h-6.3m-10.2-6H39m0-20h11.9l4.4 8h3.9c.8 0 1.8.2 1.8 1.4V43h-7.5m1.8-12H39M8.5 43H3V15h36v28H17.5\">\n          </path>\n          <circle data-name=\"stroke\" cx=\"13\" cy=\"47\" r=\"6\" fill=\"none\" stroke=\"#2e4369\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" stroke-width=\"1\"></circle>\n          <circle data-name=\"stroke\" cx=\"49\" cy=\"47\" r=\"6\" fill=\"none\" stroke=\"#2e4369\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" stroke-width=\"1\"></circle>\n        </svg>\n\n        <!-- TAXI COLLABS -->\n        <svg *ngFor=\"let taxi of taxis\" viewBox=\"0 0 64 64\" [attr.x]=\"taxi.x - ((markerSize*0.8) / 2)\"\n          [attr.y]=\"taxi.y - ((markerSize*0.8) / 2)\" (click)=\"showTaxiTooltip(taxi)\" [attr.width]=\"markerSize * 0.8\"\n          [attr.height]=\"markerSize * 0.8\">\n          <path data-name=\"layer3\"\n            d=\"M4 28h39l-5.5-10a3.7 3.7 0 0 0-3.1-2H10.3c-1 0-2 1-2.6 2S1.8 29 1.8 29A3 3 0 0 1 4 28z\" fill=\"#c3d6e0\">\n          </path>\n          <circle data-name=\"layer2\" cx=\"14\" cy=\"42\" r=\"6\" fill=\"#2a3142\"></circle>\n          <circle data-name=\"layer2\" cx=\"50\" cy=\"42\" r=\"6\" fill=\"#2a3142\"></circle>\n          <path data-name=\"layer1\" d=\"M59 28H5a3 3 0 0 0-3 3v11h6a6 6 0 0 1 12 0h24a6 6 0 0 1 12 0h6V31a3 3 0 0 0-3-3z\"\n            [attr.fill]=\"taxi.is_available? '#0fdb1a': '#db0f0f'\"></path>\n          <circle data-name=\"opacity\" cx=\"14\" cy=\"42\" r=\"3\" fill=\"#000064\" opacity=\".2\"></circle>\n          <circle data-name=\"opacity\" cx=\"50\" cy=\"42\" r=\"3\" fill=\"#000064\" opacity=\".2\"></circle>\n          <path data-name=\"opacity\" d=\"M18.2 16l-12 12H16l12-12zm19.3 2a4.1 4.1 0 0 0-2-1.8L23.7 28h5.7l8.8-8.8z\"\n            fill=\"#fff\" opacity=\".5\"></path>\n          <path data-name=\"opacity\"\n            d=\"M7 28H5a3 3 0 0 0-3 3v11h6a6 6 0 0 1 .9-3.1H7zm49 14h6v-3.1h-6.9A6 6 0 0 1 56 42zm-36 0h24a6 6 0 0 1 .9-3.1H19.1A6 6 0 0 1 20 42z\"\n            fill=\"#000064\" opacity=\".15\"></path>\n          <path data-name=\"stroke\" d=\"M44 28l-5.5-10a3.7 3.7 0 0 0-3.1-2H11.3c-1 0-2 1-2.6 2S2.8 29 2.8 29\" fill=\"none\"\n            stroke=\"#6d6f73\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"></path>\n          <path data-name=\"stroke\" d=\"M56 42h6V31a3 3 0 0 0-3-3H5a3 3 0 0 0-3 3v11h6m12 0h24\" fill=\"none\"\n            stroke=\"#6d6f73\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"></path>\n          <circle data-name=\"stroke\" cx=\"14\" cy=\"42\" r=\"6\" fill=\"none\" stroke=\"#6d6f73\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" stroke-width=\"1\"></circle>\n          <circle data-name=\"stroke\" cx=\"50\" cy=\"42\" r=\"6\" fill=\"none\" stroke=\"#6d6f73\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" stroke-width=\"1\"></circle>\n        </svg>\n\n        <!-- TAXI RIDES -->\n\n        <path *ngFor=\"let ride of taxiRides\" [attr.d]=\"ride.svgTrack\" stroke=\"#f50057\" (click)=\"showRideTooltip(ride)\"\n          [attr.stroke-width]=\"ride == tooltip.taxi_ride? 0.00015 : 0.00007\" fill=\"none\" />\n        <circle *ngFor=\"let ride of taxiRides\" [attr.cx]=\"ride.projectedTrack[0][0]\"  (click)=\"showRideTooltip(ride)\"\n          [attr.cy]=\"ride.projectedTrack[0][1]\" [attr.r]=\"markerSize * 0.1\" fill=\"#3f51b5\" />\n\n        <circle *ngFor=\"let ride of taxiRides\" [attr.cx]=\"ride.projectedTrack[ride.projectedTrack.length - 1][0]\"  (click)=\"showRideTooltip(ride)\"\n          [attr.cy]=\"ride.projectedTrack[ride.projectedTrack.length - 1][1]\" [attr.r]=\"markerSize * 0.1\"\n          fill=\"#3f51b5\" />\n\n        \n        <!-- DELIVERIES -->\n\n        <svg viewBox=\"0 0 64 64\" *ngFor=\"let mail of mailReports\" (click)=\"showDeliveryTooltip(mail)\" \n        [attr.x]=\"mail.projectedPoint[0] - ((markerSize*0.7) / 2)\" [attr.y]=\"mail.projectedPoint[1] - ((markerSize*0.7) / 2)\" \n        [attr.width]=\"markerSize * 0.8\" [attr.height]=\"markerSize * 0.8\">\n          <circle data-name=\"layer2\" cx=\"46\" cy=\"46\" r=\"16\" fill=\"#44d88d\"></circle>\n          <path data-name=\"layer1\" d=\"M46 30a16 16 0 0 1 4 .5V16.4L40.4 2H11.6L2 16.4V50h28.5A15.9 15.9 0 0 1 46 30z\"\n            fill=\"#fc9\"></path>\n          <path data-name=\"opacity\" fill=\"#fff\" opacity=\".25\" d=\"M40.4 2H11.6L2.3 16h47.4L40.4 2z\"></path>\n          <path data-name=\"opacity\" d=\"M30.5 50a15.9 15.9 0 0 1 11-19.3 16 16 0 0 0-20 19.3h9z\" fill=\"#000064\"\n            opacity=\".15\"></path>\n          <path data-name=\"stroke\" fill=\"none\" stroke=\"#2e4369\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n            stroke-width=\"2\" d=\"M30.5 50H2V16.4L11.6 2h28.8L50 16.4v14.1M2.3 16h47.4M26 2v14\"></path>\n          <circle data-name=\"stroke\" cx=\"46\" cy=\"46\" r=\"16\" fill=\"none\" stroke=\"#2e4369\" stroke-linecap=\"round\"\n            stroke-linejoin=\"round\" stroke-width=\"2\"></circle>\n          <path data-name=\"stroke\" fill=\"none\" stroke=\"#2e4369\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n            stroke-width=\"2\" d=\"M53 42.1l-8 9-5-5\"></path>\n        </svg>\n      </svg>\n\n      <svg *ngIf=\"currentPosition != undefined\" (click)=\"showTooltip('mi ubicación')\"\n        [attr.x]=\"currentPosition != undefined? (currentPosition.x - (markerSize / 2)): 0\"\n        [attr.y]=\"currentPosition != undefined? (currentPosition.y - markerSize): 0\" xmlns=\"http://www.w3.org/2000/svg\"\n        aria-labelledby=\"title\" aria-describedby=\"desc\" role=\"img\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        [attr.width]=\"markerSize\" [attr.height]=\"markerSize\" viewBox=\"0 0 64 64\">\n        <title>Mi ubicación</title>\n        <path data-name=\"layer1\" fill=\"#f50057\"\n          d=\"M32 2a20 20 0 0 0-20 20c0 18 20 40 20 40s20-22 20-40A20 20 0 0 0 32 2zm0 28a8 8 0 1 1 8-8 8 8 0 0 1-8 8z\">\n        </path>\n      </svg>\n    </svg>\n\n    <div class=\"controls-container left\">\n      <button mat-stroked-button (click)=\"zoomin()\" [disabled]=\"this.zoom >= 17\" class=\"button-zoom\">+</button>\n      <button mat-stroked-button (click)=\"zoomout()\" [disabled]=\"this.zoom <= 0\" class=\"button-zoom\">-</button>\n      <button mat-stroked-button (click)=\"setOnCurrentPosition()\" [disabled]=\"this.zoom <= 0\" class=\"button-zoom\"\n        matTooltip=\"Centrar en mi ubicacion\">\n        <mat-icon style=\"font-size: 100%; height: unset; width: unset;\">gps_fixed</mat-icon>\n      </button>\n      <button mat-stroked-button (click)=\"focus()\" [disabled]=\"this.zoom <= 0\" class=\"button-zoom\"\n        matTooltip=\"Enfocar los grupos\">\n        <mat-icon style=\"font-size: 100%; height: unset; width: unset;\">filter_center_focus</mat-icon>\n      </button>\n    </div>\n\n    <div class=\"controls-container bottom left\" (click)=\"$event.stopPropagation()\">\n      <button mat-stroked-button (click)=\"showingFilter = !showingFilter\" class=\"button-zoom\"\n        matTooltip=\"Ver registros anteriores\">\n        <mat-icon style=\"font-size: 100%; height: unset; width: unset;\">search</mat-icon>\n      </button>\n      <button mat-stroked-button (click)=\"clearSearch()\" *ngIf=\"applyingFilter\" class=\"button-zoom\"\n        matTooltip=\"Quitar filtros\">\n        <mat-icon style=\"font-size: 100%; height: unset; width: unset;\">close</mat-icon>\n      </button>\n    </div>\n\n    <div class=\"bottom-panel\" [ngClass]=\"showingFilter? 'visible': ''\" (click)=\"$event.stopPropagation()\">\n      <mat-form-field style=\" width: 35%;\">\n        <input matInput [ngxMatDatetimePicker]=\"picker\" [max]=\"date\" placeholder=\"Fecha y hora de inicio\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <ngx-mat-datetime-picker #picker></ngx-mat-datetime-picker>\n      </mat-form-field>\n      <mat-form-field style=\"width: 35%;\">\n        <input matInput [ngxMatDatetimePicker]=\"picker2\" [min]=\"picker._selected\" [max]=\"date\"\n          placeholder=\"Fecha y hora de fin\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n        <ngx-mat-datetime-picker #picker2></ngx-mat-datetime-picker>\n      </mat-form-field>\n\n      <button mat-stroked-button [disabled]=\"!picker._selected == null|| !picker2._selected == null\"\n        style=\"min-width: 40px; max-width: 40px; padding: 0; min-height: 40px; max-height: 40px\" color=\"primary\"\n        (click)=\"search(picker, picker2)\">\n        <mat-icon>search</mat-icon>\n      </button>\n    </div>\n\n    <div *ngIf=\"tooltip.showing\" class=\"tooltip\">\n      <div style=\"position: relative; width: 100%; height: 100%;\">\n        <button mat-mini-fab color=\"primary\" class=\"clear-tooltip mat-elevation-z\" (click)=\"clearTooltip()\">\n          <mat-icon>clear</mat-icon>\n        </button>\n        <div\n          style=\"padding: 25px 15px; width: calc(100% - 30px); height: 100%; text-align: center; line-height: 1.7\">\n          <div *ngIf=\"tooltip.taxi\" style=\"color: rgb(103, 103, 103); font-size: 12px;\">\n            <div style=\"color: #3f51b5; font-size: 15px; font-weight: 800;\">\n              {{tooltip.taxi.driver_name}}\n            </div>\n            <div>\n              #{{tooltip.taxi.hashtag}}\n            </div>\n            <div>\n              {{tooltip.taxi.is_available? \"Libre\": \"En viaje\"}}\n            </div>\n            <div>\n              {{tooltip.taxi.last_seen | date: 'mediumTime'}}\n            </div>\n            <div>\n              {{tooltip.taxi.vehicle_plate}} | {{tooltip.taxi.vehicle_brand}}, {{tooltip.taxi.vehicle_model}}\n            </div>\n            <button mat-raised-button (click)=\"showCollaboratorRides(tooltip.taxi)\" style=\"font-size: 12px; padding: 0 8px; line-height: 27px; margin-top: 5px;\" color=\"accent\">\n              Ver viajes del taxi\n            </button>\n          </div>\n\n          <div *ngIf=\"tooltip.mail\" style=\"color: rgb(103, 103, 103); font-size: 12px;\">\n            <div style=\"color: #3f51b5; font-size: 15px; font-weight: 800;\">\n              {{tooltip.mail.driver_name}}\n            </div>\n            <div>\n              #{{tooltip.mail.hashtag}}\n            </div>\n            <div>\n              {{(tooltip.mail.last_seen) | date: 'mediumTime'}}\n            </div>\n            <div>\n              {{tooltip.mail.vehicle_plate}} | {{tooltip.mail.vehicle_brand}}, {{tooltip.mail.vehicle_model}}\n            </div>\n            <button mat-raised-button (click)=\"showCollaboratorDeliveries(tooltip.mail)\" style=\"font-size: 12px; padding: 0 8px; line-height: 27px; margin-top: 5px;\" color=\"accent\">\n              Ver entregas del grestor\n            </button>\n          </div>\n\n          <div *ngIf=\"tooltip.taxi_ride\" style=\"color: rgb(103, 103, 103); font-size: 12px;\">\n            <div style=\"color: #3f51b5; font-size: 15px; font-weight: 800;\">\n              {{tooltip.taxi_ride.driver_name}}\n            </div>\n            <div>\n              #{{tooltip.taxi_ride.hashtag}}\n            </div>\n            <div>\n              Metros recorridos {{tooltip.taxi_ride.metters | number:'1.0-0'}}m\n            </div>\n            <div>\n              Viaje {{tooltip.taxi_ride.ride_count}} en la sesión \n            </div>\n            <div>\n              De {{(tooltip.taxi_ride.start) | date: 'short'}} <br>\n              a  {{(tooltip.taxi_ride.end) | date: 'short'}}\n            </div>\n            <div>\n              {{tooltip.taxi_ride.vehicle_plate}} | {{tooltip.taxi_ride.vehicle_brand}}, {{tooltip.taxi_ride.vehicle_model}}\n            </div>\n          </div>\n\n          <div *ngIf=\"tooltip.delivery\" style=\"color: rgb(103, 103, 103); font-size: 12px;\">\n            <div style=\"color: #3f51b5; font-size: 15px; font-weight: 800;\">\n              {{tooltip.delivery.driver_name}}\n            </div>\n            <div>\n              #{{tooltip.delivery.hashtag}}\n            </div>\n            <div>\n              Entrega {{tooltip.delivery.delivery_count}} en la sesión \n            </div>\n            <div>\n              Entregado el {{(tooltip.delivery.last_seen) | date: 'short'}}\n            </div>\n            <div>\n              {{tooltip.delivery.vehicle_plate}} | {{tooltip.delivery.vehicle_brand}}, {{tooltip.delivery.vehicle_model}}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { webSocket, WebSocketSubject, WebSocketSubjectConfig } from 'rxjs/webSocket';\nimport { EMPTY, Subject } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { WS_URL } from 'src/environments/environment';\n\n\n/* \n  Servicio para obtener conexiones a ws\n*/\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService {\n\n  constructor() {\n  }\n\n  connect(token): {messagesSubject: Subject<any>, socket: WebSocketSubject<any>} {\n    let messagesSubject = new Subject()\n    let socket = this.newWebSocket(token)\n    const messages = socket.pipe(\n      tap({\n        error: error => console.log(error),\n      }), catchError(_ => EMPTY));\n    messagesSubject.next(messages);\n    let returned = {messagesSubject, socket}\n    return returned\n  }\n\n  private newWebSocket(token) {\n    let wsConfig: WebSocketSubjectConfig<any> =\n    {\n      protocol: \"meeli\",\n      url: `${WS_URL}/${token}`\n    };\n    return webSocket(wsConfig);\n  }\n\n  // sendMessage(msg: Object) {\n  //   //this.socket.next(msg);\n  // }\n\n  // close() {\n  //   //this.socket.complete();\n  // }\n}\n","import { NgModule } from '@angular/core';\n\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatListModule} from '@angular/material/list';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { NgxMatDatetimePickerModule, NgxMatNativeDateModule, NgxMatTimepickerModule } from '@angular-material-components/datetime-picker';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\n\n@NgModule({\n    imports: [\n        MatToolbarModule,\n        MatCardModule,\n        MatButtonModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatSliderModule,\n        MatButtonToggleModule,\n        MatDividerModule,\n        MatListModule,\n        MatDialogModule,\n        MatTooltipModule,\n        MatTableModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        NgxMatDatetimePickerModule,\n        NgxMatTimepickerModule,\n        MatDatepickerModule,\n        NgxMatNativeDateModule,\n        MatDatepickerModule,\n        MatNativeDateModule\n    ],\n    exports: [\n        MatToolbarModule,\n        MatCardModule,\n        MatButtonModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatSliderModule,\n        MatButtonToggleModule,\n        MatDividerModule,\n        MatListModule,\n        MatDialogModule,\n        MatTooltipModule,\n        MatTableModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        NgxMatDatetimePickerModule,\n        NgxMatTimepickerModule,\n        MatDatepickerModule,\n        NgxMatNativeDateModule,\n        MatDatepickerModule,\n        MatNativeDateModule\n    ]\n  })\n  \n  export class MaterialModule {}","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { GroupsService } from '../services/groups/groups.service';\n\n@Component({\n  selector: 'app-mail-statistics',\n  templateUrl: './mail-statistics.component.html',\n  styleUrls: ['./mail-statistics.component.scss']\n})\nexport class MailStatisticsComponent implements OnInit {\n\n  gestores = [\n\n    /*{driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},*/\n  ]  \n\n  tipoEstadistica = 0;\n  hashtag;\n  date = new Date();\n\n  //displayedColumns: string[] = ['nombre']//, 'name', 'weight', 'symbol'];\n  displayedColumns: string[] = ['nombre', 'cantidadV', 'metrosR', 'marcaV', 'modeloV', 'placaV'];\n  //dataSource = ELEMENT_DATA;\n  dataSource = new MatTableDataSource<any>(this.gestores)\n\n  constructor(private groupsService: GroupsService) { }\n\n  ngOnInit(): void {\n  }\n\n  // Cambia el valor del tipo de estadistica, para mostrar o no diferentes vistas en el html\n  changeSelectedRol(value){\n    this.tipoEstadistica = value\n  } \n\n  // Limpia la lista del datasource y lo carga con los datos actuales, para no duplicar datos.\n  cargarLista(){\n    this.dataSource = new MatTableDataSource<any>([])\n    this.gestores = []\n    this.dataSource = new MatTableDataSource<any>(this.gestores)\n  }\n\n  // Carga los datos de los taxis utilizando el servicio de grupos\n  // Recibe un hashtag para enviarlo como parámetro y se recorre el resultado para obtener los datos requeridos para mostrar\n  verEstadisticas(){\n    this.cargarLista()\n    // Dependiendo si el tipo de estadistica es 0 ó 1 consulta solo por hashtag o tambien con la fecha ingresada por el usuario.\n    if(this.tipoEstadistica == 0){\n      this.groupsService.getTaxiStatistics(\"mail\", this.hashtag).subscribe(\n        data => {     \n          let length = Object.keys(data[\"rows\"][0][\"get_rides\"][\"records\"]).length\n          \n          for (var i=0; i < length; i++){\n            var json = data[\"rows\"][0][\"get_rides\"][\"records\"][i]\n            let metters = parseFloat(json[\"metters\"])\n  \n            this.gestores.push({driver_name: json[\"driver_name\"], ride_count: json[\"ride_count\"], \n            metters: metters.toFixed(2), vehicle_brand: json[\"vehicle_brand\"], vehicle_model: json[\"vehicle_model\"], \n            vehicle_plate: json[\"vehicle_plate\"]})\n          }   \n          this.dataSource._updateChangeSubscription();\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    }\n    if(this.tipoEstadistica == 1){\n      let _date = this.date.getFullYear() + \"-\" + (this.date.getMonth() + 1) + \"-\" + this.date.getDate()\n      this.groupsService.getTaxiStatisticsByDate(\"mail\", this.hashtag, _date).subscribe(\n        data => {      \n          let length = Object.keys(data[\"rows\"][0][\"get_rides\"][\"records\"]).length\n          \n          for (var i=0; i < length; i++){\n            var json = data[\"rows\"][0][\"get_rides\"][\"records\"][i]\n            let metters = parseFloat(json[\"metters\"])\n  \n            this.gestores.push({driver_name: json[\"driver_name\"], ride_count: json[\"ride_count\"], \n            metters: metters.toFixed(2), vehicle_brand: json[\"vehicle_brand\"], vehicle_model: json[\"vehicle_model\"], \n            vehicle_plate: json[\"vehicle_plate\"]})\n          }   \n          this.dataSource._updateChangeSubscription();\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    }\n    \n  }\n}\n","<p>Estadisticas</p>\n<mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\"\n    style=\"width: min-content; margin: 5px 10px\" value=\"0\" (change)=\"changeSelectedRol(group.value)\"\n    #group=\"matButtonToggleGroup\">\n    <mat-button-toggle value=\"0\">Generales</mat-button-toggle>\n    <mat-button-toggle value=\"1\">Por fecha</mat-button-toggle>\n</mat-button-toggle-group>\n<button mat-stroked-button style=\"position: absolute; right: 8%;  margin: 10px 10px; width: 70px;height: 70px; min-width: min-content; \"\n    (click)=\"verEstadisticas();\" color=\"primary\">Consultar\n</button>\n<br>\n<mat-form-field appearance=\"standard\" style=\"width: 25%; margin: 0 auto; margin-left: 2.5%;\">\n    <mat-label>Hashtag a consultar</mat-label>\n    <input matInput placeholder=\"Ex. hashtaxi22\" [(ngModel)]=\"hashtag\" [ngModelOptions]=\"{standalone: true}\" />\n    <mat-icon matPrefix style=\"display: flex !important;\">\n        <div style=\"margin: auto;\">#</div>\n    </mat-icon>\n</mat-form-field>\n<br>\n<mat-form-field *ngIf=\"tipoEstadistica == 1\" style=\"width: 25%; margin: 0 auto; margin-left: 2.5%;\">\n        <mat-label>Fecha a buscar</mat-label>\n        <input placeholder=\"10/30/2020   ->\" matInput [matDatepicker]=\"picker\" [(ngModel)]=\"date\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n</mat-form-field>\n\n<table *ngIf=\"tipoEstadistica == 0\" mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" style=\"width: 100%; height: 80px;\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n  \n    <!-- Position Column -->\n    <ng-container matColumnDef=\"nombre\">\n      <th mat-header-cell *matHeaderCellDef> Nombre del Conductor </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.driver_name}} </td>\n    </ng-container>\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"cantidadV\">\n        <th mat-header-cell *matHeaderCellDef> Numero de Viajes </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.ride_count}} </td>\n    </ng-container>\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"metrosR\">\n        <th mat-header-cell *matHeaderCellDef> Metros Registrados </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.metters}} </td>\n    </ng-container>\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"marcaV\">\n        <th mat-header-cell *matHeaderCellDef> Marca del Vehiculo </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.vehicle_brand}} </td>\n    </ng-container>\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"modeloV\">\n        <th mat-header-cell *matHeaderCellDef> Modelo del Vehiculo </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.vehicle_model}} </td>\n    </ng-container>\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"placaV\">\n        <th mat-header-cell *matHeaderCellDef> Placa del Vehiculo </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.vehicle_plate}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n<table *ngIf=\"tipoEstadistica == 1\" mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" style=\"width: 100%; height: 80px;\">\n\n    <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"nombre\">\n        <th mat-header-cell *matHeaderCellDef> Nombre del Conductor </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.driver_name}} </td>\n    </ng-container>\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"cantidadV\">\n        <th mat-header-cell *matHeaderCellDef> Numero de Viajes </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.ride_count}} </td>\n    </ng-container>\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"metrosR\">\n        <th mat-header-cell *matHeaderCellDef> Metros Registrados </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.metters}} </td>\n    </ng-container>\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"marcaV\">\n        <th mat-header-cell *matHeaderCellDef> Marca del Vehiculo </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.vehicle_brand}} </td>\n    </ng-container>\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"modeloV\">\n        <th mat-header-cell *matHeaderCellDef> Modelo del Vehiculo </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.vehicle_model}} </td>\n    </ng-container>\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"placaV\">\n        <th mat-header-cell *matHeaderCellDef> Placa del Vehiculo </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.vehicle_plate}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DialogService } from '../services/dialog/dialog.service';\nimport { WebsocketService } from '../services/websocket/websocket.service';\nimport { GroupsService } from '../services/groups/groups.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subject } from 'rxjs';\nimport { WebSocketSubject } from 'rxjs/webSocket';\nimport GeolocationUtils from '../utils/geolocation.utils';\nimport { LocationService } from '../services/location/location.service';\n\n@Component({\n  selector: 'app-taxi',\n  templateUrl: './taxi.component.html',\n  styleUrls: ['./taxi.component.scss']\n})\nexport class TaxiComponent implements OnInit, OnDestroy {\n\n  // Variable que ayuda a que sea responsive, si está activa muestra la ventana de grupos\n  mobileShowGroups = false\n\n  // Rol seleccionado (0 Observador, 1 Admin, 2 Gestor)\n  selectedRol = 0\n\n  // Grupo que se está añadiendo para verlo (input)\n  groupHash = \"\"\n\n  // Código o contraseña del grupo que se está añadiendo (input)\n  groupCode = \"\"\n\n  // Si está o no abierta la ventana de ver un nuevo grupo\n  addingNew = false\n\n  // Si es true muestra el progress spinner\n  loading = false\n\n  // Conexiones a sockets por cada uno de los grupos que se están gestionando\n  collabSockets : {messagesSubject: Subject<any>, socket: WebSocketSubject<any>, hashtag: string}[] = []\n\n  // Variable que guarda el número de interval que envía la info al gestor cada 1s\n  interval = undefined\n\n  // Guarda la provincia, cantón y distrito donde se ubica el usuario\n  whereAmI = undefined\n\n  constructor(\n    private dialogService: DialogService,\n      private webSocketService: WebsocketService,\n      public groupsService: GroupsService,\n      private toastr: ToastrService,\n      private locationService: LocationService\n    ){\n    }\n\n\n  ngOnDestroy(): void {\n    //Cierra todas las conexiones de los ws\n    this.collabSockets.forEach(\n      (e: {messagesSubject: Subject<any>, socket: WebSocketSubject<any>, hashtag: string}) => e.socket.complete()\n    )\n  }\n    \n\n\n\n  ngOnInit(): void {\n    // document.addEventListener(\"visibilitychange\", (() => {\n    //   if (document.visibilityState === 'visible') {\n    //     this.refreshInverval()\n    //   } else {\n    //     this.stopInterval();\n    //   }\n    // }).bind(this));\n    this.refreshWhereAmI()\n  }\n\n  //Cambia el rol seleccionado\n  changeSelectedRol(value){\n    this.selectedRol = value\n  }\n\n  //Obtiene si el botón de ver grupo debería estar deshabilitado\n  get disabledSeeGroup(){\n    return this.groupHash == \"\"\n  }\n\n\n  // Añade un grupo a los grupos visibles\n  addGroup() {\n    this.loading = true\n    //this.groups.push({hash, role: this.selectedRol, visible: true})\n    console.log(this.groupHash)\n\n    if (this.selectedRol == 0) {\n      this.groupsService.getGroupByHashtag(this.groupHash).subscribe(\n        data => {\n          this.toastr.success(`El grupo #${this.groupHash} se puede ver en este momento`)\n          this.groupsService.groups.push({ hashtag: data['hashtag'], role: this.selectedRol, visible: true })\n          \n          this.loading = false;\n        },\n        error => {\n          console.log(error);\n          if(error.status == 404){\n            this.toastr.error(`El grupo con hashtag #${this.groupHash} no existe`)\n          }\n          else{\n            this.toastr.error(`Ha ocurrido un error inesperado al cargar el grupo`)\n          }\n          this.loading = false;\n        }\n      );\n    }\n    else {\n      this.groupsService.getLoginUser(this.selectedRol, this.groupCode, this.groupHash).subscribe(\n        data => {\n          this.toastr.success(`El grupo #${this.groupHash} se puede ver en este momento`)\n          this.groupsService.groups.push({ name: data['name'], token: data['token'], hashtag: this.groupHash, role: this.selectedRol, visible: true, is_available: true })\n          if(this.selectedRol == 2){\n            console.log(\"Se agrega\")\n            this.collabSockets.push({...this.webSocketService.connect(data['token']), hashtag: this.groupHash})\n            this.refreshInverval()\n          }\n          this.loading = false;\n        },\n        error => {\n          console.log(error);\n          if(error.status == 404){\n            this.toastr.error(`El grupo con hashtag #${this.groupHash} no existe`)\n          }\n          else if(error.status == 401){\n            this.toastr.error(`El código para ingresar al grupo #${this.groupHash} es inválido`)\n          }\n          else{\n            this.toastr.error(`Ha ocurrido un error inesperado al cargar el grupo`)\n          }\n          this.loading = false;\n        }\n      );\n    }\n    console.log(this.groupsService.groups)\n    this.addingNew = false\n  }\n\n  //Abre un dialog para administrar el grupo\n  administrarGrupo(hashtag) {\n    let dialog = this.dialogService.adminGroupDialog(hashtag)\n  }\n\n  // Cambia la visibilidad del grupo en el mapa\n  toogleVisibility(group){\n    group.visible = !group.visible\n  }\n\n  // Abre un dialog para crear un grupo\n  createGroup(){\n    let dialog = this.dialogService.createGroupDialog(2)\n  }\n\n  // Envía información sobre el gestor, para que se actualice su posición en el mapa\n  async sendCollaboratorInfo(){\n    let currentLocation : any = await GeolocationUtils.getCurrentLocation()\n    this.collabSockets.forEach((e: {messagesSubject: Subject<any>, socket: WebSocketSubject<any>, hashtag: string}) => {\n      e.socket.next({action: 1, data: {lat: currentLocation.lat, lon: currentLocation.lng}})\n      e.socket.asObservable().subscribe(response => {\n        console.debug(response)\n      })\n    })\n  }\n\n  // Marca si el siguiente punto empieza o termina un viaje\n  toggleTrip(group){\n    group.is_available = !group.is_available\n    this.collabSockets.find(g => g.hashtag == group.hashtag).socket.next({\n      action: 2,\n      data: {\n        isAvailable: group.is_available\n      }\n    })\n  }\n\n  // Crea un nuevo interval si no existe o renueva el existente\n  refreshInverval(){\n    if(this.interval != undefined){\n      clearInterval(this.interval)\n    }\n    this.sendCollaboratorInfo()\n    this.interval = setInterval(this.sendCollaboratorInfo.bind(this), 1000)\n  }\n\n  // Detiene el interval\n  stopInterval(){\n    if(this.interval)\n      clearInterval(this.interval)\n    this.interval = undefined;\n  }\n\n  // Hace que un grupo se elimine de la lista de grupos que estoy viendo, si tuviese conexiones de gestor, las cierra\n  closeGroup(group){\n    this.groupsService.groups = this.groupsService.groups.filter(e => !(e == group))\n    this.collabSockets = this.collabSockets.filter((e: {messagesSubject: Subject<any>, socket: WebSocketSubject<any>, hashtag: string}) => {\n      if(e.hashtag == group.hashtag){\n        e.socket.complete()\n        return false\n      }\n      return true\n    })\n  }\n\n  // Refresca la variable whereAmI, trayendo la info de la db\n  refreshWhereAmI(){\n    GeolocationUtils.getCurrentLocation().then(\n      (myLocation : any) => {\n        this.locationService.whereAmI(myLocation.lat, myLocation.lng).then((value) => {\n          console.log(value)\n          this.whereAmI = value;\n        })\n      }\n    )\n  }\n\n  verEstadisticas(){\n    let dialog = this.dialogService.taxiStatisticsDialog();\n  }\n\n}\n","<mat-toolbar color=\"accent\">\n    Meeli | TAXI\n\n    <button mat-stroked-button style=\"background-color: azure; position: absolute; right: 16px; top: 1%; margin: 10px 10px; width: 70px; min-width: min-content; \"\n        (click)=\"verEstadisticas();\" color=\"accent\">Ver estadisticas\n    </button>\n</mat-toolbar>\n  <mat-progress-bar mode=\"indeterminate\" color=\"accent\" *ngIf=\"loading\"></mat-progress-bar>\n  <div style=\"height: 4px; width: 100%; background-color:#ff4081;\"  *ngIf=\"!loading\"></div>\n  <section class=\"app-container\">\n    <section class=\"container\">\n        <button mat-raised-button class=\"mobile-groups\" color=\"primary\"\n            (click)=\"mobileShowGroups = !mobileShowGroups\">{{mobileShowGroups? \"Atras\": \"Grupos\"}}</button>\n        <mat-card class=\"card\" [ngClass]=\"mobileShowGroups? 'visible': ''\">\n            <div *ngIf=\"addingNew\" (click)=\"addingNew = false\"\n                style=\"background-color: rgba(0, 0, 0, 0.251); width: 100%; height: 100%; position: absolute; z-index: 100; top: 0; left: 0; border-radius: 4px;\">\n\n                <mat-card (click)=\"$event.stopPropagation()\"\n                    style=\"min-width: unset; width: calc(92% - 32px); margin: 20px 4%\">\n\n                    <h2>Ver grupo nuevo</h2>\n\n                    <mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\"\n                        style=\"width: min-content; margin: 5px 10px\" value=\"0\" (change)=\"changeSelectedRol(group.value)\"\n                        #group=\"matButtonToggleGroup\">\n                        <mat-button-toggle value=\"0\">Observador</mat-button-toggle>\n                        <mat-button-toggle value=\"2\">Gestor</mat-button-toggle>\n                        <mat-button-toggle value=\"1\">Administrador</mat-button-toggle>\n                    </mat-button-toggle-group>\n\n\n                    <div style=\"display: flex;\">\n\n                        <mat-form-field appearance=\"standard\" style=\"width: 45%; margin: 0 auto; margin-left: 2.5%;\">\n                            <mat-label>Código de grupo</mat-label>\n                            <input matInput placeholder=\"Ex. 123\" [(ngModel)]=\"groupHash\"\n                                [ngModelOptions]=\"{standalone: true}\" />\n                            <mat-icon matPrefix style=\"display: flex !important;\">\n                                <div style=\"margin: auto;\">#</div>\n                            </mat-icon>\n                        </mat-form-field>\n\n                        <mat-form-field appearance=\"standard\" style=\"width: 45%; margin: 0 auto;\"\n                            *ngIf=\"selectedRol == 1 || selectedRol == 2\">\n                            <mat-label>Código de ingreso al grupo</mat-label>\n                            <input matInput placeholder=\"Ex. abc\" [(ngModel)]=\"groupCode\" />\n                            <mat-icon matPrefix>lock</mat-icon>\n                        </mat-form-field>\n                    </div>\n\n                    <div style=\"display: flex;\">\n                        <button mat-stroked-button style=\"margin: 10px 10px; width: 30%; min-width: min-content; \"\n                            (click)=\"addingNew = false;\">Cancelar </button>\n                        <button mat-stroked-button style=\"margin: 10px 10px; width: 30%; min-width: min-content; \"\n                            [disabled]=\"disabledSeeGroup\" (click)=\"addGroup();\">Ver grupo </button>\n                    </div>\n\n                </mat-card>\n            </div>\n\n            <div style=\"display: flex; width: 100%;\">\n                <button mat-stroked-button style=\"margin: 10px auto; width: 45%; min-width: min-content; \"\n                    (click)=\"this.selectedRol = 0; addingNew = true\">Ver otro grupo </button>\n                <button mat-stroked-button style=\"margin: 10px auto; width: 45%; min-width: min-content; \"\n                    (click)=\"createGroup()\">Crear grupo</button>\n\n            </div>\n\n            <h3>Grupos</h3>\n\n            <div\n                style=\"width: calc(100% - 20px); min-height: 100px; border-radius: 10px; border: 1px rgb(216, 216, 216) solid; padding: 10px; overflow-y: auto;\">\n                <div *ngIf=\"groupsService.groups.length <= 0 && whereAmI != undefined\" style=\"min-height: 100px; display: flex; justify-content: center; align-items: center; text-align: center; flex-direction: column; line-height: 1.5;\">\n                    <div style=\"color: gray;\">No hay grupos por mostrar aún</div>\n                    <div style=\"color: rgb(74, 74, 74);\">Ubicado en \n                        <b style=\"color: #3f51b5\">{{whereAmI.district}}, {{whereAmI.canton}}, {{whereAmI.province}}</b>\n                    </div>\n                </div>\n                <div *ngFor=\"let group of this.groupsService.groups\" role=\"listitem\"\n                    style=\"display: flex; flex-direction: row; justify-content: center; align-items: center;\">\n                    <button mat-button\n                        style=\"min-width: 40px; max-width: 40px; padding: 0; min-height: 40px; max-height: 40px\"\n                        (click)=\"closeGroup(group)\">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                    <div\n                        style=\"display: flex; justify-content: space-between; width: calc(100% - 30px); margin: 5px; padding: 10px; border-radius: 8px; background-color: rgb(245, 245, 245);\">\n                        <div style=\"margin: auto 0; font-size: 15px; \">#{{group.hashtag}}</div>\n                        <div>\n                            <button mat-stroked-button *ngIf=\"group.role == 2\" (click)=\"toggleTrip(group)\"\n                                [matTooltip]=\"group.is_available? 'Empezar viaje': 'Terminar viaje'\"\n                                style=\"margin-right: 7px;\" [style.color]=\"group.is_available? 'green': 'red'\"\n                                color=\"accent\">\n                                <mat-icon>time_to_leave</mat-icon>\n                            </button>\n                            <button mat-stroked-button *ngIf=\"group.role == 1\" (click)=\"administrarGrupo(group.hashtag)\"\n                                matTooltip=\"Administrar grupo\" style=\"margin-right: 7px;\" color=\"accent\">\n                                <mat-icon>assignment</mat-icon>\n                            </button>\n                            <button mat-stroked-button (click)=\"toogleVisibility(group)\" color=\"primary\"\n                                matTooltip=\"Ocultar/Mostrar\">\n                                <mat-icon>{{group.visible ? 'visibility' : 'visibility_off'}}</mat-icon>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </mat-card>\n\n    </section>\n    <app-map [groups]=\"groupsService.groups\" category=\"2\">\n\n    </app-map>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { GroupsService } from '../services/groups/groups.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-taxi-statistics',\n  templateUrl: './taxi-statistics.component.html',\n  styleUrls: ['./taxi-statistics.component.scss']\n})\nexport class TaxiStatisticsComponent implements OnInit {\n\n  gestores = [\n\n    /*{driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},\n    {driver_name: \"Brandon Cruz\", ride_count: 34, metters: 38330, vehicle_brand: \"Toyota Corolla\", vehicle_model: \"2007\", vehicle_plate: \"908-FAW\"},*/\n  ]  \n\n  tipoEstadistica = 0;\n  hashtag;\n  date = new Date();\n\n  //displayedColumns: string[] = ['nombre']//, 'name', 'weight', 'symbol'];\n  displayedColumns: string[] = ['nombre', 'cantidadV', 'metrosR', 'marcaV', 'modeloV', 'placaV'];\n  //dataSource = ELEMENT_DATA;\n  //dataSource = this.gestores;\n  dataSource = new MatTableDataSource<any>(this.gestores)\n\n  constructor(private groupsService: GroupsService, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  // Cambia el valor del tipo de estadistica, para mostrar o no diferentes vistas en el html\n  changeSelectedRol(value){\n    this.tipoEstadistica = value\n  }\n\n // Limpia la lista del datasource y lo carga con los datos actuales, para no duplicar datos.\n  cargarLista(){\n    this.dataSource = new MatTableDataSource<any>([])\n    this.gestores = []\n    this.dataSource = new MatTableDataSource<any>(this.gestores)\n  }\n\n  // Carga los datos de los taxis utilizando el servicio de grupos\n  // Recibe un hashtag para enviarlo como parámetro y se recorre el resultado para obtener los datos requeridos para mostrar\n  verEstadisticas(){\n    this.cargarLista()\n    // Dependiendo si el tipo de estadistica es 0 ó 1 consulta solo por hashtag o tambien con la fecha ingresada por el usuario.\n    if(this.tipoEstadistica == 0){\n      this.groupsService.getTaxiStatistics(\"taxi\", this.hashtag).subscribe(\n        data => {     \n          let length = Object.keys(data[\"rows\"][0][\"get_rides\"][\"records\"]).length\n          \n          for (var i=0; i < length; i++){\n            var json = data[\"rows\"][0][\"get_rides\"][\"records\"][i]\n            let metters = parseFloat(json[\"metters\"])\n  \n            this.gestores.push({driver_name: json[\"driver_name\"], ride_count: json[\"ride_count\"], \n            metters: metters.toFixed(2), vehicle_brand: json[\"vehicle_brand\"], vehicle_model: json[\"vehicle_model\"], \n            vehicle_plate: json[\"vehicle_plate\"]})\n          }   \n          this.dataSource._updateChangeSubscription(); // Actualiza la tabla en el html\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    }\n    if(this.tipoEstadistica == 1){\n      let _date = this.date.getFullYear() + \"-\" + (this.date.getMonth() + 1) + \"-\" + this.date.getDate()\n      this.groupsService.getTaxiStatisticsByDate(\"taxi\", this.hashtag, _date).subscribe(\n        data => {      \n          let length = Object.keys(data[\"rows\"][0][\"get_rides\"][\"records\"]).length\n          \n          for (var i=0; i < length; i++){\n            var json = data[\"rows\"][0][\"get_rides\"][\"records\"][i]\n            let metters = parseFloat(json[\"metters\"])\n  \n            this.gestores.push({driver_name: json[\"driver_name\"], ride_count: json[\"ride_count\"], \n            metters: metters.toFixed(2), vehicle_brand: json[\"vehicle_brand\"], vehicle_model: json[\"vehicle_model\"], \n            vehicle_plate: json[\"vehicle_plate\"]})\n          }   \n          this.dataSource._updateChangeSubscription();\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    }\n    \n  }\n}\n","<p>Estadisticas</p>\n<mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\"\n    style=\"width: min-content; margin: 5px 10px\" value=\"0\" (change)=\"changeSelectedRol(group.value)\"\n    #group=\"matButtonToggleGroup\">\n    <mat-button-toggle value=\"0\">Generales</mat-button-toggle>\n    <mat-button-toggle value=\"1\">Por fecha</mat-button-toggle>\n</mat-button-toggle-group>\n<button mat-stroked-button style=\"position: absolute; right: 8%;  margin: 10px 10px; width: 70px;height: 70px; min-width: min-content; \"\n    (click)=\"verEstadisticas();\" color=\"accent\">Consultar\n</button>\n<br>\n<mat-form-field appearance=\"standard\" style=\"width: 25%; margin: 0 auto; margin-left: 2.5%;\">\n    <mat-label>Hashtag a consultar</mat-label>\n    <input matInput placeholder=\"Ex. hashtaxi22\" [(ngModel)]=\"hashtag\" [ngModelOptions]=\"{standalone: true}\" />\n    <mat-icon matPrefix style=\"display: flex !important;\">\n        <div style=\"margin: auto;\">#</div>\n    </mat-icon>\n</mat-form-field>\n<br>\n<mat-form-field *ngIf=\"tipoEstadistica == 1\" style=\"width: 25%; margin: 0 auto; margin-left: 2.5%;\">\n        <mat-label>Fecha a buscar</mat-label>\n        <input placeholder=\"10/30/2020   ->\" matInput [matDatepicker]=\"picker\" [(ngModel)]=\"date\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n</mat-form-field>\n\n<table *ngIf=\"tipoEstadistica == 0\" mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" style=\"width: 100%; height: 80px;\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n  \n    <!-- Position Column -->\n    <ng-container matColumnDef=\"nombre\">\n      <th mat-header-cell *matHeaderCellDef> Nombre del Conductor </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.driver_name}} </td>\n    </ng-container>\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"cantidadV\">\n        <th mat-header-cell *matHeaderCellDef> Numero de viaje en la sesión </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.ride_count}} </td>\n    </ng-container>\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"metrosR\">\n        <th mat-header-cell *matHeaderCellDef> Metros Registrados </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.metters}} </td>\n    </ng-container>\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"marcaV\">\n        <th mat-header-cell *matHeaderCellDef> Marca del Vehiculo </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.vehicle_brand}} </td>\n    </ng-container>\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"modeloV\">\n        <th mat-header-cell *matHeaderCellDef> Modelo del Vehiculo </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.vehicle_model}} </td>\n    </ng-container>\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"placaV\">\n        <th mat-header-cell *matHeaderCellDef> Placa del Vehiculo </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.vehicle_plate}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n<table *ngIf=\"tipoEstadistica == 1\" mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" style=\"width: 100%; height: 80px;\">\n\n    <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"nombre\">\n        <th mat-header-cell *matHeaderCellDef> Nombre del Conductor </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.driver_name}} </td>\n    </ng-container>\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"cantidadV\">\n        <th mat-header-cell *matHeaderCellDef> Numero de Viajes </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.ride_count}} </td>\n    </ng-container>\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"metrosR\">\n        <th mat-header-cell *matHeaderCellDef> Metros Registrados </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.metters}} </td>\n    </ng-container>\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"marcaV\">\n        <th mat-header-cell *matHeaderCellDef> Marca del Vehiculo </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.vehicle_brand}} </td>\n    </ng-container>\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"modeloV\">\n        <th mat-header-cell *matHeaderCellDef> Modelo del Vehiculo </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.vehicle_model}} </td>\n    </ng-container>\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"placaV\">\n        <th mat-header-cell *matHeaderCellDef> Placa del Vehiculo </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.vehicle_plate}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MailComponent } from './mail/mail.component';\nimport { TaxiComponent } from './taxi/taxi.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'mail', pathMatch: 'full'},\n  {path: 'mail', component: MailComponent},\n  {path: 'taxi', component: TaxiComponent},\n  {path: '**', redirectTo: 'mail'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { API_URL } from \"src/environments/environment\"\n\n\n/* \n  Servicio para obtener información, crear y verificar el ingreso de grupos\n*/\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupsService {\n\n  module = \"groups\"\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  async getGroup(hashtag){\n    return this.http.get(`${API_URL}/${this.module}/${hashtag}`).toPromise()\n  }\n    \n  groups = []\n\n  // Envia al backend los datos de un grupo para ser creado\n  createGroup(group){\n    return this.http.post(`${API_URL}/groups`, group);\n  }\n\n  // Obtiene del backend un grupo a partir de un hashtag\n  getGroupByHashtag(hashtag){\n    console.log(`${API_URL}/groups/`+hashtag)\n    return this.http.get(`${API_URL}/groups/${hashtag}`);\n  }\n\n  // Envia al backend los datos de un gestor para ser creado y asignado a un grupo\n  createCollaborator(collaborator, hashtag){\n    //console.log(`${API_URL}/groups/${hashtag}/collaborators` + \" \" + collaborator)\n    return this.http.post(`${API_URL}/groups/${hashtag}/collaborators`, collaborator);\n  }\n\n  // Obtiene un gestor del backend a partir de un hashtag enviado\n  getCollaboratorByHashtag(hashtag){\n    //console.log(\"Peticion a \" + `${API_URL}/groups/${hashtag}/collaborators`)\n    return this.http.get(`${API_URL}/groups/${hashtag}/collaborators`);\n  }\n\n  // Realiza el logueo con un hashtag y una contraseña dependiendo del rol, ya sea gestor o administrador\n  getLoginUser(role, key, hashtag){\n    var config = {\n      role: role,\n      key: key\n    }\n    return this.http.post(`${API_URL}/groups/${hashtag}/login`, config);\n  }\n\n  // Envia un gestor al backend para ser eliminado \n  deleteCollaborator(hashtag, id){\n    console.log(`${API_URL}/groups/${hashtag}/collaborators/${id}`)\n    return this.http.delete(`${API_URL}/groups/${hashtag}/collaborators/${id}`);\n  }\n\n  // Obtiene todas las rutas y gestores de un hashtag\n  getTaxiStatistics(category, hashtag) {\n    return this.http.get(`${API_URL}/meeli/reports?category=${category}&hashtag=${hashtag}`);\n  }\n\n  // Obtiene todas las rutas y gestores de un hashtag en una fecha seleccionada\n  getTaxiStatisticsByDate(category, hashtag, date) {\n    return this.http.get(`${API_URL}/meeli/reports?category=${category}&hashtag=${hashtag}&from=${date}T00:00:00&to=${date}T24:00:00`);\n  }\n\n}\n","import { DataSource } from '@angular/cdk/table';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { API_URL } from 'src/environments/environment';\n\n\n/* \n  Servicio para obtener los viajes y las entregas \n*/\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportsService {\n\n  module = \"meeli/reports\"\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getReports(category: 'taxi' | 'mail', hashtag: string, collaborator: string, from: string, to: string) : Promise<any>{\n    const params: any = { category }\n    hashtag != undefined? params.hashtag = hashtag : null;\n    collaborator != undefined? params.collaborator = collaborator : null;\n    from != undefined? params.from = from : null;\n    to != undefined? params.to = to : null;\n    \n    return this.http.get(`${API_URL}/${this.module}`, {params}).toPromise()\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}